Terminals unused in grammar

    OBJECT
    AND
    OR
    ME_IG
    MA_IG
    DIF


State 170 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | ε

    4 CMD: CMD_FUNCTION
    5    | CMD_LET ';'
    6    | CMD_VAR ';'
    7    | CMD_CONST ';'
    8    | CMD_IF
    9    | CMD_FOR
   10    | CMD_WHILE
   11    | RETURN E ';'
   12    | RETURN '{' KEYS_VALUE_PAIRS '}' ';'
   13    | E ';'
   14    | '{' EMPILHA_TS CMDs '}'
   15    | E ASM ';'
   16    | ';'

   17 EMPILHA_TS: ε

   18 LISTA_ARGs: ARGs
   19           | ε

   20 ARGs: ARGs ',' E
   21     | E

   22 $@1: ε

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   24 @2: ε

   25 FUNCTION_SETA: ID @2 SETA E

   26 @3: ε

   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC CMDs '}'

   28 $@4: ε

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC E

   30 $@5: ε

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' CMDs '}'

   32 LISTA_PARAMs: PARAMs
   33             | EMPILHA_TS

   34 PARAMs: PARAMs ',' PARAM
   35       | PARAM

   36 PARAM: ID
   37      | ID '=' E

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD

   39 CMD_WHILE: WHILE '(' E ')' CMD

   40 PRIM_E: CMD_LET
   41       | CMD_VAR
   42       | CMD_CONST
   43       | E

   44 CMD_LET: LET LET_VARs

   45 LET_VARs: LET_VAR ',' LET_VARs
   46         | LET_VAR

   47 LET_VAR: ID
   48        | ID '=' E
   49        | ID '=' '{' '}'
   50        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   51 CMD_VAR: VAR VAR_VARs

   52 VAR_VARs: VAR_VAR ',' VAR_VARs
   53         | VAR_VAR

   54 VAR_VAR: ID
   55        | ID '=' E
   56        | ID '=' '{' '}'
   57        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   58 CMD_CONST: CONST CONST_VARs

   59 CONST_VARs: CONST_VAR ',' CONST_VARs
   60           | CONST_VAR

   61 CONST_VAR: ID '=' E
   62          | ID '=' '{' '}'
   63          | ID '=' '{' KEYS_VALUE_PAIRS '}'

   64 CMD_IF: IF '(' E ')' CMD ELSE CMD
   65       | IF '(' E ')' CMD

   66 LVALUEPROP: E '[' E ']'
   67           | E '.' ID

   68 KEYS_VALUE_PAIRS: ID ':' E
   69                 | ID ':' '{' '}'
   70                 | ID ':' '{' KEYS_VALUE_PAIRS '}'
   71                 | ID ':' E ',' KEYS_VALUE_PAIRS
   72                 | ID ':' '{' '}' ',' KEYS_VALUE_PAIRS
   73                 | ID ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

   74 ARRAY_ELEMENTS: E
   75               | '{' '}'
   76               | '{' KEYS_VALUE_PAIRS '}'
   77               | ARRAY_ELEMENTS ',' E
   78               | ARRAY_ELEMENTS ',' '{' '}'
   79               | ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS '}'

   80 E: ID '=' E
   81  | ID '=' '{' '}'
   82  | ID '=' '{' KEYS_VALUE_PAIRS '}'
   83  | LVALUEPROP '=' E
   84  | LVALUEPROP '=' '{' '}'
   85  | LVALUEPROP '=' '{' KEYS_VALUE_PAIRS '}'
   86  | ID MAIS_IGUAL E
   87  | LVALUEPROP MAIS_IGUAL E
   88  | E '<' E
   89  | E '>' E
   90  | E '+' E
   91  | E '-' E
   92  | E '*' E
   93  | E '/' E
   94  | E '%' E
   95  | E IGUAL E
   96  | E MAIS_MAIS
   97  | '-' E
   98  | E '(' LISTA_ARGs ')'
   99  | CDOUBLE
  100  | CINT
  101  | BOOLEAN
  102  | CSTRING
  103  | ID
  104  | LVALUEPROP
  105  | '(' E ')'
  106  | '[' ']'
  107  | '[' ARRAY_ELEMENTS ']'
  108  | FUNCTION_ANON
  109  | FUNCTION_SETA


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 94
    '(' (40) 23 29 31 38 39 64 65 98 105
    ')' (41) 23 31 38 39 64 65 98 105
    '*' (42) 92
    '+' (43) 90
    ',' (44) 20 34 45 52 59 71 72 73 77 78 79
    '-' (45) 91 97
    '.' (46) 67
    '/' (47) 93
    ':' (58) 68 69 70 71 72 73
    ';' (59) 5 6 7 11 12 13 15 16 38
    '<' (60) 88
    '=' (61) 37 48 49 50 55 56 57 61 62 63 80 81 82 83 84 85
    '>' (62) 89
    '[' (91) 66 106 107
    ']' (93) 66 106 107
    '{' (123) 12 14 23 31 49 50 56 57 62 63 69 70 72 73 75 76 78 79 81 82 84 85
    '}' (125) 12 14 23 27 31 49 50 56 57 62 63 69 70 72 73 75 76 78 79 81 82 84 85
    error (256)
    ID (258) 25 27 31 36 37 47 48 49 50 54 55 56 57 61 62 63 67 68 69 70 71 72 73 80 81 82 86 103
    IF (259) 64 65
    ELSE (260) 64
    LET (261) 44
    CONST (262) 58
    VAR (263) 51
    FOR (264) 38
    FUNCTION (265) 23 31
    WHILE (266) 39
    ASM (267) 15
    RETURN (268) 11 12
    BOOLEAN (269) 101
    OBJECT (270)
    FECHA_PARENTESES_FUNC (271) 29
    SETA (272) 25
    OPEN_BRACKETS_FUNC (273) 27
    CDOUBLE (274) 99
    CSTRING (275) 102
    CINT (276) 100
    AND (277)
    OR (278)
    ME_IG (279)
    MA_IG (280)
    DIF (281)
    IGUAL (282) 95
    MAIS_IGUAL (283) 86 87
    MAIS_MAIS (284) 96


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    S (49)
        on left: 1
        on right: 0
    CMDs (50)
        on left: 2 3
        on right: 1 2 14 23 27 31
    CMD (51)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 38 39 64 65
    EMPILHA_TS (52)
        on left: 17
        on right: 14 33
    LISTA_ARGs (53)
        on left: 18 19
        on right: 98
    ARGs (54)
        on left: 20 21
        on right: 18 20
    FUNCTION_ANON (55)
        on left: 23
        on right: 108
    $@1 (56)
        on left: 22
        on right: 23
    FUNCTION_SETA (57)
        on left: 25 27 29
        on right: 109
    @2 (58)
        on left: 24
        on right: 25
    @3 (59)
        on left: 26
        on right: 27
    $@4 (60)
        on left: 28
        on right: 29
    CMD_FUNCTION (61)
        on left: 31
        on right: 4
    $@5 (62)
        on left: 30
        on right: 31
    LISTA_PARAMs (63)
        on left: 32 33
        on right: 23 29 31
    PARAMs (64)
        on left: 34 35
        on right: 32 34
    PARAM (65)
        on left: 36 37
        on right: 34 35
    CMD_FOR (66)
        on left: 38
        on right: 9
    CMD_WHILE (67)
        on left: 39
        on right: 10
    PRIM_E (68)
        on left: 40 41 42 43
        on right: 38
    CMD_LET (69)
        on left: 44
        on right: 5 40
    LET_VARs (70)
        on left: 45 46
        on right: 44 45
    LET_VAR (71)
        on left: 47 48 49 50
        on right: 45 46
    CMD_VAR (72)
        on left: 51
        on right: 6 41
    VAR_VARs (73)
        on left: 52 53
        on right: 51 52
    VAR_VAR (74)
        on left: 54 55 56 57
        on right: 52 53
    CMD_CONST (75)
        on left: 58
        on right: 7 42
    CONST_VARs (76)
        on left: 59 60
        on right: 58 59
    CONST_VAR (77)
        on left: 61 62 63
        on right: 59 60
    CMD_IF (78)
        on left: 64 65
        on right: 8
    LVALUEPROP (79)
        on left: 66 67
        on right: 83 84 85 87 104
    KEYS_VALUE_PAIRS (80)
        on left: 68 69 70 71 72 73
        on right: 12 50 57 63 70 71 72 73 76 79 82 85
    ARRAY_ELEMENTS (81)
        on left: 74 75 76 77 78 79
        on right: 77 78 79 107
    E (82)
        on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
        on right: 11 13 15 20 21 25 29 37 38 39 43 48 55 61 64 65 66 67 68 71 74 77 80 83 86 87 88 89 90 91 92 93 94 95 96 97 98 105


State 0

    0 $accept: • S $end

    $default  reduce using rule 3 (CMDs)

    S     go to state 1
    CMDs  go to state 2


State 1

    0 $accept: S • $end

    $end  shift, and go to state 3


State 2

    1 S: CMDs •
    2 CMDs: CMDs • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 1 (S)

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 3

    0 $accept: S $end •

    $default  accept


State 4

   25 FUNCTION_SETA: ID • @2 SETA E
   27              | ID • @3 OPEN_BRACKETS_FUNC CMDs '}'
   80 E: ID • '=' E
   81  | ID • '=' '{' '}'
   82  | ID • '=' '{' KEYS_VALUE_PAIRS '}'
   86  | ID • MAIS_IGUAL E
  103  | ID •

    MAIS_IGUAL  shift, and go to state 34
    '='         shift, and go to state 35

    SETA                reduce using rule 24 (@2)
    OPEN_BRACKETS_FUNC  reduce using rule 26 (@3)
    $default            reduce using rule 103 (E)

    @2  go to state 36
    @3  go to state 37


State 5

   64 CMD_IF: IF • '(' E ')' CMD ELSE CMD
   65       | IF • '(' E ')' CMD

    '('  shift, and go to state 38


State 6

   44 CMD_LET: LET • LET_VARs

    ID  shift, and go to state 39

    LET_VARs  go to state 40
    LET_VAR   go to state 41


State 7

   58 CMD_CONST: CONST • CONST_VARs

    ID  shift, and go to state 42

    CONST_VARs  go to state 43
    CONST_VAR   go to state 44


State 8

   51 CMD_VAR: VAR • VAR_VARs

    ID  shift, and go to state 45

    VAR_VARs  go to state 46
    VAR_VAR   go to state 47


State 9

   38 CMD_FOR: FOR • '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 48


State 10

   23 FUNCTION_ANON: FUNCTION • $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   31 CMD_FUNCTION: FUNCTION • ID $@5 '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 49

    $default  reduce using rule 22 ($@1)

    $@1  go to state 50


State 11

   39 CMD_WHILE: WHILE • '(' E ')' CMD

    '('  shift, and go to state 51


State 12

   11 CMD: RETURN • E ';'
   12    | RETURN • '{' KEYS_VALUE_PAIRS '}' ';'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 53

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 54


State 13

  101 E: BOOLEAN •

    $default  reduce using rule 101 (E)


State 14

   99 E: CDOUBLE •

    $default  reduce using rule 99 (E)


State 15

  102 E: CSTRING •

    $default  reduce using rule 102 (E)


State 16

  100 E: CINT •

    $default  reduce using rule 100 (E)


State 17

   97 E: '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 55


State 18

  106 E: '[' • ']'
  107  | '[' • ARRAY_ELEMENTS ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 56
    ']'       shift, and go to state 57

    FUNCTION_ANON   go to state 23
    FUNCTION_SETA   go to state 24
    LVALUEPROP      go to state 32
    ARRAY_ELEMENTS  go to state 58
    E               go to state 59


State 19

   29 FUNCTION_SETA: '(' • LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC E
  105 E: '(' • E ')'

    ID        shift, and go to state 60
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS     go to state 61
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LISTA_PARAMs   go to state 62
    PARAMs         go to state 63
    PARAM          go to state 64
    LVALUEPROP     go to state 32
    E              go to state 65


State 20

   16 CMD: ';' •

    $default  reduce using rule 16 (CMD)


State 21

   14 CMD: '{' • EMPILHA_TS CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 66


State 22

    2 CMDs: CMDs CMD •

    $default  reduce using rule 2 (CMDs)


State 23

  108 E: FUNCTION_ANON •

    $default  reduce using rule 108 (E)


State 24

  109 E: FUNCTION_SETA •

    $default  reduce using rule 109 (E)


State 25

    4 CMD: CMD_FUNCTION •

    $default  reduce using rule 4 (CMD)


State 26

    9 CMD: CMD_FOR •

    $default  reduce using rule 9 (CMD)


State 27

   10 CMD: CMD_WHILE •

    $default  reduce using rule 10 (CMD)


State 28

    5 CMD: CMD_LET • ';'

    ';'  shift, and go to state 67


State 29

    6 CMD: CMD_VAR • ';'

    ';'  shift, and go to state 68


State 30

    7 CMD: CMD_CONST • ';'

    ';'  shift, and go to state 69


State 31

    8 CMD: CMD_IF •

    $default  reduce using rule 8 (CMD)


State 32

   83 E: LVALUEPROP • '=' E
   84  | LVALUEPROP • '=' '{' '}'
   85  | LVALUEPROP • '=' '{' KEYS_VALUE_PAIRS '}'
   87  | LVALUEPROP • MAIS_IGUAL E
  104  | LVALUEPROP •

    MAIS_IGUAL  shift, and go to state 70
    '='         shift, and go to state 71

    $default  reduce using rule 104 (E)


State 33

   13 CMD: E • ';'
   15    | E • ASM ';'
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    ASM        shift, and go to state 72
    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ';'        shift, and go to state 85


State 34

   86 E: ID MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 86


State 35

   80 E: ID '=' • E
   81  | ID '=' • '{' '}'
   82  | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 87

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 88


State 36

   25 FUNCTION_SETA: ID @2 • SETA E

    SETA  shift, and go to state 89


State 37

   27 FUNCTION_SETA: ID @3 • OPEN_BRACKETS_FUNC CMDs '}'

    OPEN_BRACKETS_FUNC  shift, and go to state 90


State 38

   64 CMD_IF: IF '(' • E ')' CMD ELSE CMD
   65       | IF '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 91


State 39

   47 LET_VAR: ID •
   48        | ID • '=' E
   49        | ID • '=' '{' '}'
   50        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 92

    $default  reduce using rule 47 (LET_VAR)


State 40

   44 CMD_LET: LET LET_VARs •

    $default  reduce using rule 44 (CMD_LET)


State 41

   45 LET_VARs: LET_VAR • ',' LET_VARs
   46         | LET_VAR •

    ','  shift, and go to state 93

    $default  reduce using rule 46 (LET_VARs)


State 42

   61 CONST_VAR: ID • '=' E
   62          | ID • '=' '{' '}'
   63          | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 94


State 43

   58 CMD_CONST: CONST CONST_VARs •

    $default  reduce using rule 58 (CMD_CONST)


State 44

   59 CONST_VARs: CONST_VAR • ',' CONST_VARs
   60           | CONST_VAR •

    ','  shift, and go to state 95

    $default  reduce using rule 60 (CONST_VARs)


State 45

   54 VAR_VAR: ID •
   55        | ID • '=' E
   56        | ID • '=' '{' '}'
   57        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 96

    $default  reduce using rule 54 (VAR_VAR)


State 46

   51 CMD_VAR: VAR VAR_VARs •

    $default  reduce using rule 51 (CMD_VAR)


State 47

   52 VAR_VARs: VAR_VAR • ',' VAR_VARs
   53         | VAR_VAR •

    ','  shift, and go to state 97

    $default  reduce using rule 53 (VAR_VARs)


State 48

   38 CMD_FOR: FOR '(' • PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 4
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    PRIM_E         go to state 98
    CMD_LET        go to state 99
    CMD_VAR        go to state 100
    CMD_CONST      go to state 101
    LVALUEPROP     go to state 32
    E              go to state 102


State 49

   31 CMD_FUNCTION: FUNCTION ID • $@5 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 30 ($@5)

    $@5  go to state 103


State 50

   23 FUNCTION_ANON: FUNCTION $@1 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 104


State 51

   39 CMD_WHILE: WHILE '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 105


State 52

   23 FUNCTION_ANON: FUNCTION • $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 22 ($@1)

    $@1  go to state 50


State 53

   12 CMD: RETURN '{' • KEYS_VALUE_PAIRS '}' ';'

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 107


State 54

   11 CMD: RETURN E • ';'
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ';'        shift, and go to state 108


State 55

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   97  | '-' E •
   98  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 97 (E)


State 56

   75 ARRAY_ELEMENTS: '{' • '}'
   76               | '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 109

    KEYS_VALUE_PAIRS  go to state 110


State 57

  106 E: '[' ']' •

    $default  reduce using rule 106 (E)


State 58

   77 ARRAY_ELEMENTS: ARRAY_ELEMENTS • ',' E
   78               | ARRAY_ELEMENTS • ',' '{' '}'
   79               | ARRAY_ELEMENTS • ',' '{' KEYS_VALUE_PAIRS '}'
  107 E: '[' ARRAY_ELEMENTS • ']'

    ','  shift, and go to state 111
    ']'  shift, and go to state 112


State 59

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   74 ARRAY_ELEMENTS: E •
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 74 (ARRAY_ELEMENTS)


State 60

   25 FUNCTION_SETA: ID • @2 SETA E
   27              | ID • @3 OPEN_BRACKETS_FUNC CMDs '}'
   36 PARAM: ID •
   37      | ID • '=' E
   80 E: ID • '=' E
   81  | ID • '=' '{' '}'
   82  | ID • '=' '{' KEYS_VALUE_PAIRS '}'
   86  | ID • MAIS_IGUAL E
  103  | ID •

    MAIS_IGUAL  shift, and go to state 34
    '='         shift, and go to state 113

    FECHA_PARENTESES_FUNC  reduce using rule 36 (PARAM)
    SETA                   reduce using rule 24 (@2)
    OPEN_BRACKETS_FUNC     reduce using rule 26 (@3)
    ','                    reduce using rule 36 (PARAM)
    $default               reduce using rule 103 (E)

    @2  go to state 36
    @3  go to state 37


State 61

   33 LISTA_PARAMs: EMPILHA_TS •

    $default  reduce using rule 33 (LISTA_PARAMs)


State 62

   29 FUNCTION_SETA: '(' LISTA_PARAMs • $@4 FECHA_PARENTESES_FUNC E

    $default  reduce using rule 28 ($@4)

    $@4  go to state 114


State 63

   32 LISTA_PARAMs: PARAMs •
   34 PARAMs: PARAMs • ',' PARAM

    ','  shift, and go to state 115

    $default  reduce using rule 32 (LISTA_PARAMs)


State 64

   35 PARAMs: PARAM •

    $default  reduce using rule 35 (PARAMs)


State 65

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'
  105  | '(' E • ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 116


State 66

   14 CMD: '{' EMPILHA_TS • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 117


State 67

    5 CMD: CMD_LET ';' •

    $default  reduce using rule 5 (CMD)


State 68

    6 CMD: CMD_VAR ';' •

    $default  reduce using rule 6 (CMD)


State 69

    7 CMD: CMD_CONST ';' •

    $default  reduce using rule 7 (CMD)


State 70

   87 E: LVALUEPROP MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 118


State 71

   83 E: LVALUEPROP '=' • E
   84  | LVALUEPROP '=' • '{' '}'
   85  | LVALUEPROP '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 119

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 120


State 72

   15 CMD: E ASM • ';'

    ';'  shift, and go to state 121


State 73

   95 E: E IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 122


State 74

   88 E: E '<' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 123


State 75

   89 E: E '>' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 124


State 76

   90 E: E '+' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 125


State 77

   91 E: E '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 126


State 78

   92 E: E '*' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 127


State 79

   93 E: E '/' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 128


State 80

   94 E: E '%' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 129


State 81

   96 E: E MAIS_MAIS •

    $default  reduce using rule 96 (E)


State 82

   66 LVALUEPROP: E '[' • E ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 130


State 83

   98 E: E '(' • LISTA_ARGs ')'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 19 (LISTA_ARGs)

    LISTA_ARGs     go to state 131
    ARGs           go to state 132
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 133


State 84

   67 LVALUEPROP: E '.' • ID

    ID  shift, and go to state 134


State 85

   13 CMD: E ';' •

    $default  reduce using rule 13 (CMD)


State 86

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   86 E: ID MAIS_IGUAL E •
   88  | E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 86 (E)


State 87

   81 E: ID '=' '{' • '}'
   82  | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 135

    KEYS_VALUE_PAIRS  go to state 136


State 88

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   80 E: ID '=' E •
   88  | E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 80 (E)


State 89

   25 FUNCTION_SETA: ID @2 SETA • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 137


State 90

   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 138


State 91

   64 CMD_IF: IF '(' E • ')' CMD ELSE CMD
   65       | IF '(' E • ')' CMD
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 139


State 92

   48 LET_VAR: ID '=' • E
   49        | ID '=' • '{' '}'
   50        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 140

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 141


State 93

   45 LET_VARs: LET_VAR ',' • LET_VARs

    ID  shift, and go to state 39

    LET_VARs  go to state 142
    LET_VAR   go to state 41


State 94

   61 CONST_VAR: ID '=' • E
   62          | ID '=' • '{' '}'
   63          | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 143

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 144


State 95

   59 CONST_VARs: CONST_VAR ',' • CONST_VARs

    ID  shift, and go to state 42

    CONST_VARs  go to state 145
    CONST_VAR   go to state 44


State 96

   55 VAR_VAR: ID '=' • E
   56        | ID '=' • '{' '}'
   57        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 146

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 147


State 97

   52 VAR_VARs: VAR_VAR ',' • VAR_VARs

    ID  shift, and go to state 45

    VAR_VARs  go to state 148
    VAR_VAR   go to state 47


State 98

   38 CMD_FOR: FOR '(' PRIM_E • ';' E ';' E ')' CMD

    ';'  shift, and go to state 149


State 99

   40 PRIM_E: CMD_LET •

    $default  reduce using rule 40 (PRIM_E)


State 100

   41 PRIM_E: CMD_VAR •

    $default  reduce using rule 41 (PRIM_E)


State 101

   42 PRIM_E: CMD_CONST •

    $default  reduce using rule 42 (PRIM_E)


State 102

   43 PRIM_E: E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 43 (PRIM_E)


State 103

   31 CMD_FUNCTION: FUNCTION ID $@5 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 150


State 104

   23 FUNCTION_ANON: FUNCTION $@1 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 151

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 61
    LISTA_PARAMs  go to state 152
    PARAMs        go to state 63
    PARAM         go to state 64


State 105

   39 CMD_WHILE: WHILE '(' E • ')' CMD
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 153


State 106

   68 KEYS_VALUE_PAIRS: ID • ':' E
   69                 | ID • ':' '{' '}'
   70                 | ID • ':' '{' KEYS_VALUE_PAIRS '}'
   71                 | ID • ':' E ',' KEYS_VALUE_PAIRS
   72                 | ID • ':' '{' '}' ',' KEYS_VALUE_PAIRS
   73                 | ID • ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ':'  shift, and go to state 154


State 107

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS • '}' ';'

    '}'  shift, and go to state 155


State 108

   11 CMD: RETURN E ';' •

    $default  reduce using rule 11 (CMD)


State 109

   75 ARRAY_ELEMENTS: '{' '}' •

    $default  reduce using rule 75 (ARRAY_ELEMENTS)


State 110

   76 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 156


State 111

   77 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' • E
   78               | ARRAY_ELEMENTS ',' • '{' '}'
   79               | ARRAY_ELEMENTS ',' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 157

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 158


State 112

  107 E: '[' ARRAY_ELEMENTS ']' •

    $default  reduce using rule 107 (E)


State 113

   37 PARAM: ID '=' • E
   80 E: ID '=' • E
   81  | ID '=' • '{' '}'
   82  | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 87

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 159


State 114

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 • FECHA_PARENTESES_FUNC E

    FECHA_PARENTESES_FUNC  shift, and go to state 160


State 115

   34 PARAMs: PARAMs ',' • PARAM

    ID  shift, and go to state 151

    PARAM  go to state 161


State 116

  105 E: '(' E ')' •

    $default  reduce using rule 105 (E)


State 117

    2 CMDs: CMDs • CMD
   14 CMD: '{' EMPILHA_TS CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 162

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 118

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   87 E: LVALUEPROP MAIS_IGUAL E •
   88  | E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 87 (E)


State 119

   84 E: LVALUEPROP '=' '{' • '}'
   85  | LVALUEPROP '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 163

    KEYS_VALUE_PAIRS  go to state 164


State 120

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   83 E: LVALUEPROP '=' E •
   88  | E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 83 (E)


State 121

   15 CMD: E ASM ';' •

    $default  reduce using rule 15 (CMD)


State 122

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   95  | E IGUAL E •
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 95 (E)


State 123

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   88  | E '<' E •
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 88 (E)


State 124

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   89  | E '>' E •
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 89 (E)


State 125

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   90  | E '+' E •
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 90 (E)


State 126

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   91  | E '-' E •
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 91 (E)


State 127

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   92  | E '*' E •
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 92 (E)


State 128

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   93  | E '/' E •
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 93 (E)


State 129

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   94  | E '%' E •
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 94 (E)


State 130

   66 LVALUEPROP: E • '[' E ']'
   66           | E '[' E • ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ']'        shift, and go to state 165


State 131

   98 E: E '(' LISTA_ARGs • ')'

    ')'  shift, and go to state 166


State 132

   18 LISTA_ARGs: ARGs •
   20 ARGs: ARGs • ',' E

    ','  shift, and go to state 167

    $default  reduce using rule 18 (LISTA_ARGs)


State 133

   21 ARGs: E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 21 (ARGs)


State 134

   67 LVALUEPROP: E '.' ID •

    $default  reduce using rule 67 (LVALUEPROP)


State 135

   81 E: ID '=' '{' '}' •

    $default  reduce using rule 81 (E)


State 136

   82 E: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 168


State 137

   25 FUNCTION_SETA: ID @2 SETA E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 25 (FUNCTION_SETA)


State 138

    2 CMDs: CMDs • CMD
   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 169

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 139

   64 CMD_IF: IF '(' E ')' • CMD ELSE CMD
   65       | IF '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 170
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 140

   49 LET_VAR: ID '=' '{' • '}'
   50        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 171

    KEYS_VALUE_PAIRS  go to state 172


State 141

   48 LET_VAR: ID '=' E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 48 (LET_VAR)


State 142

   45 LET_VARs: LET_VAR ',' LET_VARs •

    $default  reduce using rule 45 (LET_VARs)


State 143

   62 CONST_VAR: ID '=' '{' • '}'
   63          | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 173

    KEYS_VALUE_PAIRS  go to state 174


State 144

   61 CONST_VAR: ID '=' E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 61 (CONST_VAR)


State 145

   59 CONST_VARs: CONST_VAR ',' CONST_VARs •

    $default  reduce using rule 59 (CONST_VARs)


State 146

   56 VAR_VAR: ID '=' '{' • '}'
   57        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 175

    KEYS_VALUE_PAIRS  go to state 176


State 147

   55 VAR_VAR: ID '=' E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 55 (VAR_VAR)


State 148

   52 VAR_VARs: VAR_VAR ',' VAR_VARs •

    $default  reduce using rule 52 (VAR_VARs)


State 149

   38 CMD_FOR: FOR '(' PRIM_E ';' • E ';' E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 177


State 150

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 151

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 61
    LISTA_PARAMs  go to state 178
    PARAMs        go to state 63
    PARAM         go to state 64


State 151

   36 PARAM: ID •
   37      | ID • '=' E

    '='  shift, and go to state 179

    $default  reduce using rule 36 (PARAM)


State 152

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 180


State 153

   39 CMD_WHILE: WHILE '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 181
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 154

   68 KEYS_VALUE_PAIRS: ID ':' • E
   69                 | ID ':' • '{' '}'
   70                 | ID ':' • '{' KEYS_VALUE_PAIRS '}'
   71                 | ID ':' • E ',' KEYS_VALUE_PAIRS
   72                 | ID ':' • '{' '}' ',' KEYS_VALUE_PAIRS
   73                 | ID ':' • '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 182

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 183


State 155

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS '}' • ';'

    ';'  shift, and go to state 184


State 156

   76 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 76 (ARRAY_ELEMENTS)


State 157

   78 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' • '}'
   79               | ARRAY_ELEMENTS ',' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 185

    KEYS_VALUE_PAIRS  go to state 186


State 158

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   77 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' E •
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 77 (ARRAY_ELEMENTS)


State 159

   37 PARAM: ID '=' E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   80 E: ID '=' E •
   88  | E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    ')'       reduce using rule 80 (E)
    $default  reduce using rule 37 (PARAM)


State 160

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 187


State 161

   34 PARAMs: PARAMs ',' PARAM •

    $default  reduce using rule 34 (PARAMs)


State 162

   14 CMD: '{' EMPILHA_TS CMDs '}' •

    $default  reduce using rule 14 (CMD)


State 163

   84 E: LVALUEPROP '=' '{' '}' •

    $default  reduce using rule 84 (E)


State 164

   85 E: LVALUEPROP '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 188


State 165

   66 LVALUEPROP: E '[' E ']' •

    $default  reduce using rule 66 (LVALUEPROP)


State 166

   98 E: E '(' LISTA_ARGs ')' •

    $default  reduce using rule 98 (E)


State 167

   20 ARGs: ARGs ',' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 189


State 168

   82 E: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 82 (E)


State 169

   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC CMDs '}' •

    $default  reduce using rule 27 (FUNCTION_SETA)


State 170

   64 CMD_IF: IF '(' E ')' CMD • ELSE CMD
   65       | IF '(' E ')' CMD •

    ELSE  shift, and go to state 190

    ELSE      [reduce using rule 65 (CMD_IF)]
    $default  reduce using rule 65 (CMD_IF)


State 171

   49 LET_VAR: ID '=' '{' '}' •

    $default  reduce using rule 49 (LET_VAR)


State 172

   50 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 191


State 173

   62 CONST_VAR: ID '=' '{' '}' •

    $default  reduce using rule 62 (CONST_VAR)


State 174

   63 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 192


State 175

   56 VAR_VAR: ID '=' '{' '}' •

    $default  reduce using rule 56 (VAR_VAR)


State 176

   57 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 193


State 177

   38 CMD_FOR: FOR '(' PRIM_E ';' E • ';' E ')' CMD
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ';'        shift, and go to state 194


State 178

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 195


State 179

   37 PARAM: ID '=' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 196


State 180

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 197


State 181

   39 CMD_WHILE: WHILE '(' E ')' CMD •

    $default  reduce using rule 39 (CMD_WHILE)


State 182

   69 KEYS_VALUE_PAIRS: ID ':' '{' • '}'
   70                 | ID ':' '{' • KEYS_VALUE_PAIRS '}'
   72                 | ID ':' '{' • '}' ',' KEYS_VALUE_PAIRS
   73                 | ID ':' '{' • KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ID   shift, and go to state 106
    '}'  shift, and go to state 198

    KEYS_VALUE_PAIRS  go to state 199


State 183

   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   68 KEYS_VALUE_PAIRS: ID ':' E •
   71                 | ID ':' E • ',' KEYS_VALUE_PAIRS
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ','        shift, and go to state 200

    $default  reduce using rule 68 (KEYS_VALUE_PAIRS)


State 184

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS '}' ';' •

    $default  reduce using rule 12 (CMD)


State 185

   78 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' '}' •

    $default  reduce using rule 78 (ARRAY_ELEMENTS)


State 186

   79 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 201


State 187

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 29 (FUNCTION_SETA)


State 188

   85 E: LVALUEPROP '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 85 (E)


State 189

   20 ARGs: ARGs ',' E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 20 (ARGs)


State 190

   64 CMD_IF: IF '(' E ')' CMD ELSE • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 202
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 191

   50 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 50 (LET_VAR)


State 192

   63 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 63 (CONST_VAR)


State 193

   57 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 57 (VAR_VAR)


State 194

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 203


State 195

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 204


State 196

   37 PARAM: ID '=' E •
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 37 (PARAM)


State 197

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 205


State 198

   69 KEYS_VALUE_PAIRS: ID ':' '{' '}' •
   72                 | ID ':' '{' '}' • ',' KEYS_VALUE_PAIRS

    ','  shift, and go to state 206

    $default  reduce using rule 69 (KEYS_VALUE_PAIRS)


State 199

   70 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS • '}'
   73                 | ID ':' '{' KEYS_VALUE_PAIRS • '}' ',' KEYS_VALUE_PAIRS

    '}'  shift, and go to state 207


State 200

   71 KEYS_VALUE_PAIRS: ID ':' E ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 208


State 201

   79 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 79 (ARRAY_ELEMENTS)


State 202

   64 CMD_IF: IF '(' E ')' CMD ELSE CMD •

    $default  reduce using rule 64 (CMD_IF)


State 203

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E • ')' CMD
   66 LVALUEPROP: E • '[' E ']'
   67           | E • '.' ID
   88 E: E • '<' E
   89  | E • '>' E
   90  | E • '+' E
   91  | E • '-' E
   92  | E • '*' E
   93  | E • '/' E
   94  | E • '%' E
   95  | E • IGUAL E
   96  | E • MAIS_MAIS
   98  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 209


State 204

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 210


State 205

    2 CMDs: CMDs • CMD
   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 211

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 206

   72 KEYS_VALUE_PAIRS: ID ':' '{' '}' ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 212


State 207

   70 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' •
   73                 | ID ':' '{' KEYS_VALUE_PAIRS '}' • ',' KEYS_VALUE_PAIRS

    ','  shift, and go to state 213

    $default  reduce using rule 70 (KEYS_VALUE_PAIRS)


State 208

   71 KEYS_VALUE_PAIRS: ID ':' E ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 71 (KEYS_VALUE_PAIRS)


State 209

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 214
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 210

    2 CMDs: CMDs • CMD
   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 215

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 211

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 23 (FUNCTION_ANON)


State 212

   72 KEYS_VALUE_PAIRS: ID ':' '{' '}' ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 72 (KEYS_VALUE_PAIRS)


State 213

   73 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 216


State 214

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD •

    $default  reduce using rule 38 (CMD_FOR)


State 215

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 31 (CMD_FUNCTION)


State 216

   73 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 73 (KEYS_VALUE_PAIRS)
