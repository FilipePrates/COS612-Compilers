Terminals unused in grammar

    OBJECT
    FECHA_PARENTESES_FUNC
    AND
    OR
    ME_IG
    MA_IG
    DIF


State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | ε

    4 CMD: CMD_FUNCTION
    5    | CMD_LET ';'
    6    | CMD_VAR ';'
    7    | CMD_CONST ';'
    8    | CMD_IF
    9    | CMD_FOR
   10    | CMD_WHILE
   11    | RETURN E ';'
   12    | E ';'
   13    | '{' EMPILHA_TS CMDs '}'
   14    | E ASM ';'
   15    | ';'

   16 EMPILHA_TS: ε

   17 LISTA_ARGs: ARGs
   18           | ε

   19 ARGs: ARGs ',' E
   20     | E

   21 @1: ε

   22 FUNCTION_ANON: FUNCTION @1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   23 $@2: ε

   24 CMD_FUNCTION: FUNCTION ID $@2 '(' LISTA_PARAMs ')' '{' CMDs '}'

   25 LISTA_PARAMs: PARAMs
   26             | ε

   27 PARAMs: PARAMs ',' PARAM
   28       | PARAM

   29 PARAM: ID
   30      | ID '=' E

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD

   32 CMD_WHILE: WHILE '(' E ')' CMD

   33 PRIM_E: CMD_LET
   34       | CMD_VAR
   35       | CMD_CONST
   36       | E

   37 CMD_LET: LET LET_VARs

   38 LET_VARs: LET_VAR ',' LET_VARs
   39         | LET_VAR

   40 LET_VAR: ID
   41        | ID '=' E
   42        | ID '=' '{' '}'
   43        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   44 CMD_VAR: VAR VAR_VARs

   45 VAR_VARs: VAR_VAR ',' VAR_VARs
   46         | VAR_VAR

   47 VAR_VAR: ID
   48        | ID '=' E
   49        | ID '=' '{' '}'
   50        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   51 CMD_CONST: CONST CONST_VARs

   52 CONST_VARs: CONST_VAR ',' CONST_VARs
   53           | CONST_VAR

   54 CONST_VAR: ID '=' E
   55          | ID '=' '{' '}'
   56          | ID '=' '{' KEYS_VALUE_PAIRS '}'

   57 CMD_IF: IF '(' E ')' CMD ELSE CMD
   58       | IF '(' E ')' CMD

   59 LVALUEPROP: E '[' E ']'
   60           | E '.' ID

   61 KEYS_VALUE_PAIRS: ID ':' E ',' KEYS_VALUE_PAIRS
   62                 | ID ':' E
   63                 | ID ':' '{' '}'
   64                 | ID ':' '{' KEYS_VALUE_PAIRS '}'

   65 ARRAY_ELEMENTS: E ',' ARRAY_ELEMENTS
   66               | E
   67               | '{' '}'
   68               | '{' KEYS_VALUE_PAIRS '}'

   69 E: ID '=' E
   70  | LVALUEPROP '=' E
   71  | ID '=' '{' '}'
   72  | LVALUEPROP '=' '{' '}'
   73  | ID MAIS_IGUAL E
   74  | LVALUEPROP MAIS_IGUAL E
   75  | E '<' E
   76  | E '>' E
   77  | E '+' E
   78  | E '-' E
   79  | E '*' E
   80  | E '/' E
   81  | E '%' E
   82  | E IGUAL E
   83  | E MAIS_MAIS
   84  | '-' E
   85  | E '(' LISTA_ARGs ')'
   86  | CDOUBLE
   87  | CINT
   88  | BOOLEAN
   89  | CSTRING
   90  | ID
   91  | LVALUEPROP
   92  | '(' E ')'
   93  | '[' ']'
   94  | '[' ARRAY_ELEMENTS ']'
   95  | FUNCTION_ANON


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 81
    '(' (40) 22 24 31 32 57 58 85 92
    ')' (41) 22 24 31 32 57 58 85 92
    '*' (42) 79
    '+' (43) 77
    ',' (44) 19 27 38 45 52 61 65
    '-' (45) 78 84
    '.' (46) 60
    '/' (47) 80
    ':' (58) 61 62 63 64
    ';' (59) 5 6 7 11 12 14 15 31
    '<' (60) 75
    '=' (61) 30 41 42 43 48 49 50 54 55 56 69 70 71 72
    '>' (62) 76
    '[' (91) 59 93 94
    ']' (93) 59 93 94
    '{' (123) 13 22 24 42 43 49 50 55 56 63 64 67 68 71 72
    '}' (125) 13 22 24 42 43 49 50 55 56 63 64 67 68 71 72
    error (256)
    ID (258) 24 29 30 40 41 42 43 47 48 49 50 54 55 56 60 61 62 63 64 69 71 73 90
    IF (259) 57 58
    ELSE (260) 57
    LET (261) 37
    CONST (262) 51
    VAR (263) 44
    FOR (264) 31
    FUNCTION (265) 22 24
    WHILE (266) 32
    ASM (267) 14
    RETURN (268) 11
    BOOLEAN (269) 88
    OBJECT (270)
    FECHA_PARENTESES_FUNC (271)
    CDOUBLE (272) 86
    CSTRING (273) 89
    CINT (274) 87
    AND (275)
    OR (276)
    ME_IG (277)
    MA_IG (278)
    DIF (279)
    IGUAL (280) 82
    MAIS_IGUAL (281) 73 74
    MAIS_MAIS (282) 83


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    S (47)
        on left: 1
        on right: 0
    CMDs (48)
        on left: 2 3
        on right: 1 2 13 22 24
    CMD (49)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 2 31 32 57 58
    EMPILHA_TS (50)
        on left: 16
        on right: 13
    LISTA_ARGs (51)
        on left: 17 18
        on right: 85
    ARGs (52)
        on left: 19 20
        on right: 17 19
    FUNCTION_ANON (53)
        on left: 22
        on right: 95
    @1 (54)
        on left: 21
        on right: 22
    CMD_FUNCTION (55)
        on left: 24
        on right: 4
    $@2 (56)
        on left: 23
        on right: 24
    LISTA_PARAMs (57)
        on left: 25 26
        on right: 22 24
    PARAMs (58)
        on left: 27 28
        on right: 25 27
    PARAM (59)
        on left: 29 30
        on right: 27 28
    CMD_FOR (60)
        on left: 31
        on right: 9
    CMD_WHILE (61)
        on left: 32
        on right: 10
    PRIM_E (62)
        on left: 33 34 35 36
        on right: 31
    CMD_LET (63)
        on left: 37
        on right: 5 33
    LET_VARs (64)
        on left: 38 39
        on right: 37 38
    LET_VAR (65)
        on left: 40 41 42 43
        on right: 38 39
    CMD_VAR (66)
        on left: 44
        on right: 6 34
    VAR_VARs (67)
        on left: 45 46
        on right: 44 45
    VAR_VAR (68)
        on left: 47 48 49 50
        on right: 45 46
    CMD_CONST (69)
        on left: 51
        on right: 7 35
    CONST_VARs (70)
        on left: 52 53
        on right: 51 52
    CONST_VAR (71)
        on left: 54 55 56
        on right: 52 53
    CMD_IF (72)
        on left: 57 58
        on right: 8
    LVALUEPROP (73)
        on left: 59 60
        on right: 70 72 74 91
    KEYS_VALUE_PAIRS (74)
        on left: 61 62 63 64
        on right: 43 50 56 61 64 68
    ARRAY_ELEMENTS (75)
        on left: 65 66 67 68
        on right: 65 94
    E (76)
        on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
        on right: 11 12 14 19 20 30 31 32 36 41 48 54 57 58 59 60 61 62 65 66 69 70 73 74 75 76 77 78 79 80 81 82 83 84 85 92


State 0

    0 $accept: • S $end

    $default  reduce using rule 3 (CMDs)

    S     go to state 1
    CMDs  go to state 2


State 1

    0 $accept: S • $end

    $end  shift, and go to state 3


State 2

    1 S: CMDs •
    2 CMDs: CMDs • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 1 (S)

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 3

    0 $accept: S $end •

    $default  accept


State 4

   69 E: ID • '=' E
   71  | ID • '=' '{' '}'
   73  | ID • MAIS_IGUAL E
   90  | ID •

    MAIS_IGUAL  shift, and go to state 33
    '='         shift, and go to state 34

    $default  reduce using rule 90 (E)


State 5

   57 CMD_IF: IF • '(' E ')' CMD ELSE CMD
   58       | IF • '(' E ')' CMD

    '('  shift, and go to state 35


State 6

   37 CMD_LET: LET • LET_VARs

    ID  shift, and go to state 36

    LET_VARs  go to state 37
    LET_VAR   go to state 38


State 7

   51 CMD_CONST: CONST • CONST_VARs

    ID  shift, and go to state 39

    CONST_VARs  go to state 40
    CONST_VAR   go to state 41


State 8

   44 CMD_VAR: VAR • VAR_VARs

    ID  shift, and go to state 42

    VAR_VARs  go to state 43
    VAR_VAR   go to state 44


State 9

   31 CMD_FOR: FOR • '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 45


State 10

   22 FUNCTION_ANON: FUNCTION • @1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   24 CMD_FUNCTION: FUNCTION • ID $@2 '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 46

    $default  reduce using rule 21 (@1)

    @1  go to state 47


State 11

   32 CMD_WHILE: WHILE • '(' E ')' CMD

    '('  shift, and go to state 48


State 12

   11 CMD: RETURN • E ';'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 50


State 13

   88 E: BOOLEAN •

    $default  reduce using rule 88 (E)


State 14

   86 E: CDOUBLE •

    $default  reduce using rule 86 (E)


State 15

   89 E: CSTRING •

    $default  reduce using rule 89 (E)


State 16

   87 E: CINT •

    $default  reduce using rule 87 (E)


State 17

   84 E: '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 51


State 18

   93 E: '[' • ']'
   94  | '[' • ARRAY_ELEMENTS ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 52
    ']'       shift, and go to state 53

    FUNCTION_ANON   go to state 23
    LVALUEPROP      go to state 31
    ARRAY_ELEMENTS  go to state 54
    E               go to state 55


State 19

   92 E: '(' • E ')'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 56


State 20

   15 CMD: ';' •

    $default  reduce using rule 15 (CMD)


State 21

   13 CMD: '{' • EMPILHA_TS CMDs '}'

    $default  reduce using rule 16 (EMPILHA_TS)

    EMPILHA_TS  go to state 57


State 22

    2 CMDs: CMDs CMD •

    $default  reduce using rule 2 (CMDs)


State 23

   95 E: FUNCTION_ANON •

    $default  reduce using rule 95 (E)


State 24

    4 CMD: CMD_FUNCTION •

    $default  reduce using rule 4 (CMD)


State 25

    9 CMD: CMD_FOR •

    $default  reduce using rule 9 (CMD)


State 26

   10 CMD: CMD_WHILE •

    $default  reduce using rule 10 (CMD)


State 27

    5 CMD: CMD_LET • ';'

    ';'  shift, and go to state 58


State 28

    6 CMD: CMD_VAR • ';'

    ';'  shift, and go to state 59


State 29

    7 CMD: CMD_CONST • ';'

    ';'  shift, and go to state 60


State 30

    8 CMD: CMD_IF •

    $default  reduce using rule 8 (CMD)


State 31

   70 E: LVALUEPROP • '=' E
   72  | LVALUEPROP • '=' '{' '}'
   74  | LVALUEPROP • MAIS_IGUAL E
   91  | LVALUEPROP •

    MAIS_IGUAL  shift, and go to state 61
    '='         shift, and go to state 62

    $default  reduce using rule 91 (E)


State 32

   12 CMD: E • ';'
   14    | E • ASM ';'
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    ASM        shift, and go to state 63
    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ';'        shift, and go to state 76


State 33

   73 E: ID MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 77


State 34

   69 E: ID '=' • E
   71  | ID '=' • '{' '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 78

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 79


State 35

   57 CMD_IF: IF '(' • E ')' CMD ELSE CMD
   58       | IF '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 80


State 36

   40 LET_VAR: ID •
   41        | ID • '=' E
   42        | ID • '=' '{' '}'
   43        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 81

    $default  reduce using rule 40 (LET_VAR)


State 37

   37 CMD_LET: LET LET_VARs •

    $default  reduce using rule 37 (CMD_LET)


State 38

   38 LET_VARs: LET_VAR • ',' LET_VARs
   39         | LET_VAR •

    ','  shift, and go to state 82

    $default  reduce using rule 39 (LET_VARs)


State 39

   54 CONST_VAR: ID • '=' E
   55          | ID • '=' '{' '}'
   56          | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 83


State 40

   51 CMD_CONST: CONST CONST_VARs •

    $default  reduce using rule 51 (CMD_CONST)


State 41

   52 CONST_VARs: CONST_VAR • ',' CONST_VARs
   53           | CONST_VAR •

    ','  shift, and go to state 84

    $default  reduce using rule 53 (CONST_VARs)


State 42

   47 VAR_VAR: ID •
   48        | ID • '=' E
   49        | ID • '=' '{' '}'
   50        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 85

    $default  reduce using rule 47 (VAR_VAR)


State 43

   44 CMD_VAR: VAR VAR_VARs •

    $default  reduce using rule 44 (CMD_VAR)


State 44

   45 VAR_VARs: VAR_VAR • ',' VAR_VARs
   46         | VAR_VAR •

    ','  shift, and go to state 86

    $default  reduce using rule 46 (VAR_VARs)


State 45

   31 CMD_FOR: FOR '(' • PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 4
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    PRIM_E         go to state 87
    CMD_LET        go to state 88
    CMD_VAR        go to state 89
    CMD_CONST      go to state 90
    LVALUEPROP     go to state 31
    E              go to state 91


State 46

   24 CMD_FUNCTION: FUNCTION ID • $@2 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 23 ($@2)

    $@2  go to state 92


State 47

   22 FUNCTION_ANON: FUNCTION @1 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 93


State 48

   32 CMD_WHILE: WHILE '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 94


State 49

   22 FUNCTION_ANON: FUNCTION • @1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 21 (@1)

    @1  go to state 47


State 50

   11 CMD: RETURN E • ';'
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ';'        shift, and go to state 95


State 51

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   84  | '-' E •
   85  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 84 (E)


State 52

   67 ARRAY_ELEMENTS: '{' • '}'
   68               | '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 96
    '}'  shift, and go to state 97

    KEYS_VALUE_PAIRS  go to state 98


State 53

   93 E: '[' ']' •

    $default  reduce using rule 93 (E)


State 54

   94 E: '[' ARRAY_ELEMENTS • ']'

    ']'  shift, and go to state 99


State 55

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   65 ARRAY_ELEMENTS: E • ',' ARRAY_ELEMENTS
   66               | E •
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ','        shift, and go to state 100

    $default  reduce using rule 66 (ARRAY_ELEMENTS)


State 56

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'
   92  | '(' E • ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ')'        shift, and go to state 101


State 57

   13 CMD: '{' EMPILHA_TS • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 102


State 58

    5 CMD: CMD_LET ';' •

    $default  reduce using rule 5 (CMD)


State 59

    6 CMD: CMD_VAR ';' •

    $default  reduce using rule 6 (CMD)


State 60

    7 CMD: CMD_CONST ';' •

    $default  reduce using rule 7 (CMD)


State 61

   74 E: LVALUEPROP MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 103


State 62

   70 E: LVALUEPROP '=' • E
   72  | LVALUEPROP '=' • '{' '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 104

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 105


State 63

   14 CMD: E ASM • ';'

    ';'  shift, and go to state 106


State 64

   82 E: E IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 107


State 65

   75 E: E '<' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 108


State 66

   76 E: E '>' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 109


State 67

   77 E: E '+' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 110


State 68

   78 E: E '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 111


State 69

   79 E: E '*' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 112


State 70

   80 E: E '/' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 113


State 71

   81 E: E '%' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 114


State 72

   83 E: E MAIS_MAIS •

    $default  reduce using rule 83 (E)


State 73

   59 LVALUEPROP: E '[' • E ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 115


State 74

   85 E: E '(' • LISTA_ARGs ')'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 18 (LISTA_ARGs)

    LISTA_ARGs     go to state 116
    ARGs           go to state 117
    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 118


State 75

   60 LVALUEPROP: E '.' • ID

    ID  shift, and go to state 119


State 76

   12 CMD: E ';' •

    $default  reduce using rule 12 (CMD)


State 77

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   73 E: ID MAIS_IGUAL E •
   75  | E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 73 (E)


State 78

   71 E: ID '=' '{' • '}'

    '}'  shift, and go to state 120


State 79

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   69 E: ID '=' E •
   75  | E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 69 (E)


State 80

   57 CMD_IF: IF '(' E • ')' CMD ELSE CMD
   58       | IF '(' E • ')' CMD
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ')'        shift, and go to state 121


State 81

   41 LET_VAR: ID '=' • E
   42        | ID '=' • '{' '}'
   43        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 122

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 123


State 82

   38 LET_VARs: LET_VAR ',' • LET_VARs

    ID  shift, and go to state 36

    LET_VARs  go to state 124
    LET_VAR   go to state 38


State 83

   54 CONST_VAR: ID '=' • E
   55          | ID '=' • '{' '}'
   56          | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 125

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 126


State 84

   52 CONST_VARs: CONST_VAR ',' • CONST_VARs

    ID  shift, and go to state 39

    CONST_VARs  go to state 127
    CONST_VAR   go to state 41


State 85

   48 VAR_VAR: ID '=' • E
   49        | ID '=' • '{' '}'
   50        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 128

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 129


State 86

   45 VAR_VARs: VAR_VAR ',' • VAR_VARs

    ID  shift, and go to state 42

    VAR_VARs  go to state 130
    VAR_VAR   go to state 44


State 87

   31 CMD_FOR: FOR '(' PRIM_E • ';' E ';' E ')' CMD

    ';'  shift, and go to state 131


State 88

   33 PRIM_E: CMD_LET •

    $default  reduce using rule 33 (PRIM_E)


State 89

   34 PRIM_E: CMD_VAR •

    $default  reduce using rule 34 (PRIM_E)


State 90

   35 PRIM_E: CMD_CONST •

    $default  reduce using rule 35 (PRIM_E)


State 91

   36 PRIM_E: E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 36 (PRIM_E)


State 92

   24 CMD_FUNCTION: FUNCTION ID $@2 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 132


State 93

   22 FUNCTION_ANON: FUNCTION @1 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 133

    $default  reduce using rule 26 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 134
    PARAMs        go to state 135
    PARAM         go to state 136


State 94

   32 CMD_WHILE: WHILE '(' E • ')' CMD
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ')'        shift, and go to state 137


State 95

   11 CMD: RETURN E ';' •

    $default  reduce using rule 11 (CMD)


State 96

   61 KEYS_VALUE_PAIRS: ID • ':' E ',' KEYS_VALUE_PAIRS
   62                 | ID • ':' E
   63                 | ID • ':' '{' '}'
   64                 | ID • ':' '{' KEYS_VALUE_PAIRS '}'

    ':'  shift, and go to state 138


State 97

   67 ARRAY_ELEMENTS: '{' '}' •

    $default  reduce using rule 67 (ARRAY_ELEMENTS)


State 98

   68 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 139


State 99

   94 E: '[' ARRAY_ELEMENTS ']' •

    $default  reduce using rule 94 (E)


State 100

   65 ARRAY_ELEMENTS: E ',' • ARRAY_ELEMENTS

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 52

    FUNCTION_ANON   go to state 23
    LVALUEPROP      go to state 31
    ARRAY_ELEMENTS  go to state 140
    E               go to state 55


State 101

   92 E: '(' E ')' •

    $default  reduce using rule 92 (E)


State 102

    2 CMDs: CMDs • CMD
   13 CMD: '{' EMPILHA_TS CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 141

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 103

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   74 E: LVALUEPROP MAIS_IGUAL E •
   75  | E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 74 (E)


State 104

   72 E: LVALUEPROP '=' '{' • '}'

    '}'  shift, and go to state 142


State 105

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   70 E: LVALUEPROP '=' E •
   75  | E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 70 (E)


State 106

   14 CMD: E ASM ';' •

    $default  reduce using rule 14 (CMD)


State 107

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   82  | E IGUAL E •
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 82 (E)


State 108

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   75  | E '<' E •
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 75 (E)


State 109

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   76  | E '>' E •
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 76 (E)


State 110

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   77  | E '+' E •
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 77 (E)


State 111

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   78  | E '-' E •
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 78 (E)


State 112

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   79  | E '*' E •
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 79 (E)


State 113

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   80  | E '/' E •
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 80 (E)


State 114

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   81  | E '%' E •
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 81 (E)


State 115

   59 LVALUEPROP: E • '[' E ']'
   59           | E '[' E • ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ']'        shift, and go to state 143


State 116

   85 E: E '(' LISTA_ARGs • ')'

    ')'  shift, and go to state 144


State 117

   17 LISTA_ARGs: ARGs •
   19 ARGs: ARGs • ',' E

    ','  shift, and go to state 145

    $default  reduce using rule 17 (LISTA_ARGs)


State 118

   20 ARGs: E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 20 (ARGs)


State 119

   60 LVALUEPROP: E '.' ID •

    $default  reduce using rule 60 (LVALUEPROP)


State 120

   71 E: ID '=' '{' '}' •

    $default  reduce using rule 71 (E)


State 121

   57 CMD_IF: IF '(' E ')' • CMD ELSE CMD
   58       | IF '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 146
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 122

   42 LET_VAR: ID '=' '{' • '}'
   43        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 96
    '}'  shift, and go to state 147

    KEYS_VALUE_PAIRS  go to state 148


State 123

   41 LET_VAR: ID '=' E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 41 (LET_VAR)


State 124

   38 LET_VARs: LET_VAR ',' LET_VARs •

    $default  reduce using rule 38 (LET_VARs)


State 125

   55 CONST_VAR: ID '=' '{' • '}'
   56          | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 96
    '}'  shift, and go to state 149

    KEYS_VALUE_PAIRS  go to state 150


State 126

   54 CONST_VAR: ID '=' E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 54 (CONST_VAR)


State 127

   52 CONST_VARs: CONST_VAR ',' CONST_VARs •

    $default  reduce using rule 52 (CONST_VARs)


State 128

   49 VAR_VAR: ID '=' '{' • '}'
   50        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 96
    '}'  shift, and go to state 151

    KEYS_VALUE_PAIRS  go to state 152


State 129

   48 VAR_VAR: ID '=' E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 48 (VAR_VAR)


State 130

   45 VAR_VARs: VAR_VAR ',' VAR_VARs •

    $default  reduce using rule 45 (VAR_VARs)


State 131

   31 CMD_FOR: FOR '(' PRIM_E ';' • E ';' E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 153


State 132

   24 CMD_FUNCTION: FUNCTION ID $@2 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 133

    $default  reduce using rule 26 (LISTA_PARAMs)

    LISTA_PARAMs  go to state 154
    PARAMs        go to state 135
    PARAM         go to state 136


State 133

   29 PARAM: ID •
   30      | ID • '=' E

    '='  shift, and go to state 155

    $default  reduce using rule 29 (PARAM)


State 134

   22 FUNCTION_ANON: FUNCTION @1 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 156


State 135

   25 LISTA_PARAMs: PARAMs •
   27 PARAMs: PARAMs • ',' PARAM

    ','  shift, and go to state 157

    $default  reduce using rule 25 (LISTA_PARAMs)


State 136

   28 PARAMs: PARAM •

    $default  reduce using rule 28 (PARAMs)


State 137

   32 CMD_WHILE: WHILE '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 158
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 138

   61 KEYS_VALUE_PAIRS: ID ':' • E ',' KEYS_VALUE_PAIRS
   62                 | ID ':' • E
   63                 | ID ':' • '{' '}'
   64                 | ID ':' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 159

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 160


State 139

   68 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 68 (ARRAY_ELEMENTS)


State 140

   65 ARRAY_ELEMENTS: E ',' ARRAY_ELEMENTS •

    $default  reduce using rule 65 (ARRAY_ELEMENTS)


State 141

   13 CMD: '{' EMPILHA_TS CMDs '}' •

    $default  reduce using rule 13 (CMD)


State 142

   72 E: LVALUEPROP '=' '{' '}' •

    $default  reduce using rule 72 (E)


State 143

   59 LVALUEPROP: E '[' E ']' •

    $default  reduce using rule 59 (LVALUEPROP)


State 144

   85 E: E '(' LISTA_ARGs ')' •

    $default  reduce using rule 85 (E)


State 145

   19 ARGs: ARGs ',' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 161


State 146

   57 CMD_IF: IF '(' E ')' CMD • ELSE CMD
   58       | IF '(' E ')' CMD •

    ELSE  shift, and go to state 162

    ELSE      [reduce using rule 58 (CMD_IF)]
    $default  reduce using rule 58 (CMD_IF)


State 147

   42 LET_VAR: ID '=' '{' '}' •

    $default  reduce using rule 42 (LET_VAR)


State 148

   43 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 163


State 149

   55 CONST_VAR: ID '=' '{' '}' •

    $default  reduce using rule 55 (CONST_VAR)


State 150

   56 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 164


State 151

   49 VAR_VAR: ID '=' '{' '}' •

    $default  reduce using rule 49 (VAR_VAR)


State 152

   50 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 165


State 153

   31 CMD_FOR: FOR '(' PRIM_E ';' E • ';' E ')' CMD
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ';'        shift, and go to state 166


State 154

   24 CMD_FUNCTION: FUNCTION ID $@2 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 167


State 155

   30 PARAM: ID '=' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 168


State 156

   22 FUNCTION_ANON: FUNCTION @1 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 169


State 157

   27 PARAMs: PARAMs ',' • PARAM

    ID  shift, and go to state 133

    PARAM  go to state 170


State 158

   32 CMD_WHILE: WHILE '(' E ')' CMD •

    $default  reduce using rule 32 (CMD_WHILE)


State 159

   63 KEYS_VALUE_PAIRS: ID ':' '{' • '}'
   64                 | ID ':' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 96
    '}'  shift, and go to state 171

    KEYS_VALUE_PAIRS  go to state 172


State 160

   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   61 KEYS_VALUE_PAIRS: ID ':' E • ',' KEYS_VALUE_PAIRS
   62                 | ID ':' E •
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ','        shift, and go to state 173

    $default  reduce using rule 62 (KEYS_VALUE_PAIRS)


State 161

   19 ARGs: ARGs ',' E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 19 (ARGs)


State 162

   57 CMD_IF: IF '(' E ')' CMD ELSE • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 174
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 163

   43 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 43 (LET_VAR)


State 164

   56 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 56 (CONST_VAR)


State 165

   50 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 50 (VAR_VAR)


State 166

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 49
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    LVALUEPROP     go to state 31
    E              go to state 175


State 167

   24 CMD_FUNCTION: FUNCTION ID $@2 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 176


State 168

   30 PARAM: ID '=' E •
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75

    $default  reduce using rule 30 (PARAM)


State 169

   22 FUNCTION_ANON: FUNCTION @1 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 177


State 170

   27 PARAMs: PARAMs ',' PARAM •

    $default  reduce using rule 27 (PARAMs)


State 171

   63 KEYS_VALUE_PAIRS: ID ':' '{' '}' •

    $default  reduce using rule 63 (KEYS_VALUE_PAIRS)


State 172

   64 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 178


State 173

   61 KEYS_VALUE_PAIRS: ID ':' E ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 96

    KEYS_VALUE_PAIRS  go to state 179


State 174

   57 CMD_IF: IF '(' E ')' CMD ELSE CMD •

    $default  reduce using rule 57 (CMD_IF)


State 175

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E • ')' CMD
   59 LVALUEPROP: E • '[' E ']'
   60           | E • '.' ID
   75 E: E • '<' E
   76  | E • '>' E
   77  | E • '+' E
   78  | E • '-' E
   79  | E • '*' E
   80  | E • '/' E
   81  | E • '%' E
   82  | E • IGUAL E
   83  | E • MAIS_MAIS
   85  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    MAIS_MAIS  shift, and go to state 72
    '['        shift, and go to state 73
    '('        shift, and go to state 74
    '.'        shift, and go to state 75
    ')'        shift, and go to state 180


State 176

   24 CMD_FUNCTION: FUNCTION ID $@2 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 181


State 177

    2 CMDs: CMDs • CMD
   22 FUNCTION_ANON: FUNCTION @1 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 182

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 178

   64 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 64 (KEYS_VALUE_PAIRS)


State 179

   61 KEYS_VALUE_PAIRS: ID ':' E ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 61 (KEYS_VALUE_PAIRS)


State 180

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 183
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 181

    2 CMDs: CMDs • CMD
   24 CMD_FUNCTION: FUNCTION ID $@2 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 184

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    CMD_FUNCTION   go to state 24
    CMD_FOR        go to state 25
    CMD_WHILE      go to state 26
    CMD_LET        go to state 27
    CMD_VAR        go to state 28
    CMD_CONST      go to state 29
    CMD_IF         go to state 30
    LVALUEPROP     go to state 31
    E              go to state 32


State 182

   22 FUNCTION_ANON: FUNCTION @1 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 22 (FUNCTION_ANON)


State 183

   31 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD •

    $default  reduce using rule 31 (CMD_FOR)


State 184

   24 CMD_FUNCTION: FUNCTION ID $@2 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 24 (CMD_FUNCTION)
