Terminals unused in grammar

    OBJECT
    AND
    OR
    ME_IG
    MA_IG
    DIF


State 164 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | ε

    4 CMD: CMD_FUNCTION
    5    | CMD_LET ';'
    6    | CMD_VAR ';'
    7    | CMD_CONST ';'
    8    | CMD_IF
    9    | CMD_FOR
   10    | CMD_WHILE
   11    | RETURN E ';'
   12    | RETURN '{' KEYS_VALUE_PAIRS '}' ';'
   13    | E ';'
   14    | '{' EMPILHA_TS CMDs '}'
   15    | E ASM ';'
   16    | ';'

   17 EMPILHA_TS: ε

   18 LISTA_ARGs: ARGs
   19           | ε

   20 ARGs: ARGs ',' E
   21     | E

   22 $@1: ε

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   24 $@2: ε

   25 FUNCTION_SETA: ID $@2 EMPILHA_TS SETA E

   26 $@3: ε

   27 FUNCTION_SETA: '(' LISTA_PARAMs $@3 FECHA_PARENTESES_FUNC E

   28 $@4: ε

   29 CMD_FUNCTION: FUNCTION ID $@4 '(' LISTA_PARAMs ')' '{' CMDs '}'

   30 LISTA_PARAMs: PARAMs
   31             | EMPILHA_TS

   32 PARAMs: PARAMs ',' PARAM
   33       | PARAM

   34 PARAM: ID
   35      | ID '=' E

   36 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD

   37 CMD_WHILE: WHILE '(' E ')' CMD

   38 PRIM_E: CMD_LET
   39       | CMD_VAR
   40       | CMD_CONST
   41       | E

   42 CMD_LET: LET LET_VARs

   43 LET_VARs: LET_VAR ',' LET_VARs
   44         | LET_VAR

   45 LET_VAR: ID
   46        | ID '=' E
   47        | ID '=' '{' '}'
   48        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   49 CMD_VAR: VAR VAR_VARs

   50 VAR_VARs: VAR_VAR ',' VAR_VARs
   51         | VAR_VAR

   52 VAR_VAR: ID
   53        | ID '=' E
   54        | ID '=' '{' '}'
   55        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   56 CMD_CONST: CONST CONST_VARs

   57 CONST_VARs: CONST_VAR ',' CONST_VARs
   58           | CONST_VAR

   59 CONST_VAR: ID '=' E
   60          | ID '=' '{' '}'
   61          | ID '=' '{' KEYS_VALUE_PAIRS '}'

   62 CMD_IF: IF '(' E ')' CMD ELSE CMD
   63       | IF '(' E ')' CMD

   64 LVALUEPROP: E '[' E ']'
   65           | E '.' ID

   66 KEYS_VALUE_PAIRS: ID ':' E
   67                 | ID ':' '{' '}'
   68                 | ID ':' '{' KEYS_VALUE_PAIRS '}'
   69                 | ID ':' E ',' KEYS_VALUE_PAIRS
   70                 | ID ':' '{' '}' ',' KEYS_VALUE_PAIRS
   71                 | ID ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

   72 ARRAY_ELEMENTS: E
   73               | '{' '}'
   74               | '{' KEYS_VALUE_PAIRS '}'
   75               | ARRAY_ELEMENTS ',' E
   76               | ARRAY_ELEMENTS ',' '{' '}'
   77               | ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS '}'

   78 E: ID '=' E
   79  | LVALUEPROP '=' E
   80  | ID '=' '{' '}'
   81  | LVALUEPROP '=' '{' '}'
   82  | ID MAIS_IGUAL E
   83  | LVALUEPROP MAIS_IGUAL E
   84  | E '<' E
   85  | E '>' E
   86  | E '+' E
   87  | E '-' E
   88  | E '*' E
   89  | E '/' E
   90  | E '%' E
   91  | E IGUAL E
   92  | E MAIS_MAIS
   93  | '-' E
   94  | E '(' LISTA_ARGs ')'
   95  | CDOUBLE
   96  | CINT
   97  | BOOLEAN
   98  | CSTRING
   99  | ID
  100  | LVALUEPROP
  101  | '(' E ')'
  102  | '[' ']'
  103  | '[' ARRAY_ELEMENTS ']'
  104  | FUNCTION_ANON
  105  | FUNCTION_SETA


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 90
    '(' (40) 23 27 29 36 37 62 63 94 101
    ')' (41) 23 29 36 37 62 63 94 101
    '*' (42) 88
    '+' (43) 86
    ',' (44) 20 32 43 50 57 69 70 71 75 76 77
    '-' (45) 87 93
    '.' (46) 65
    '/' (47) 89
    ':' (58) 66 67 68 69 70 71
    ';' (59) 5 6 7 11 12 13 15 16 36
    '<' (60) 84
    '=' (61) 35 46 47 48 53 54 55 59 60 61 78 79 80 81
    '>' (62) 85
    '[' (91) 64 102 103
    ']' (93) 64 102 103
    '{' (123) 12 14 23 29 47 48 54 55 60 61 67 68 70 71 73 74 76 77 80 81
    '}' (125) 12 14 23 29 47 48 54 55 60 61 67 68 70 71 73 74 76 77 80 81
    error (256)
    ID (258) 25 29 34 35 45 46 47 48 52 53 54 55 59 60 61 65 66 67 68 69 70 71 78 80 82 99
    IF (259) 62 63
    ELSE (260) 62
    LET (261) 42
    CONST (262) 56
    VAR (263) 49
    FOR (264) 36
    FUNCTION (265) 23 29
    WHILE (266) 37
    ASM (267) 15
    RETURN (268) 11 12
    BOOLEAN (269) 97
    OBJECT (270)
    FECHA_PARENTESES_FUNC (271) 27
    SETA (272) 25
    CDOUBLE (273) 95
    CSTRING (274) 98
    CINT (275) 96
    AND (276)
    OR (277)
    ME_IG (278)
    MA_IG (279)
    DIF (280)
    IGUAL (281) 91
    MAIS_IGUAL (282) 82 83
    MAIS_MAIS (283) 92


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    S (48)
        on left: 1
        on right: 0
    CMDs (49)
        on left: 2 3
        on right: 1 2 14 23 29
    CMD (50)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 36 37 62 63
    EMPILHA_TS (51)
        on left: 17
        on right: 14 25 31
    LISTA_ARGs (52)
        on left: 18 19
        on right: 94
    ARGs (53)
        on left: 20 21
        on right: 18 20
    FUNCTION_ANON (54)
        on left: 23
        on right: 104
    $@1 (55)
        on left: 22
        on right: 23
    FUNCTION_SETA (56)
        on left: 25 27
        on right: 105
    $@2 (57)
        on left: 24
        on right: 25
    $@3 (58)
        on left: 26
        on right: 27
    CMD_FUNCTION (59)
        on left: 29
        on right: 4
    $@4 (60)
        on left: 28
        on right: 29
    LISTA_PARAMs (61)
        on left: 30 31
        on right: 23 27 29
    PARAMs (62)
        on left: 32 33
        on right: 30 32
    PARAM (63)
        on left: 34 35
        on right: 32 33
    CMD_FOR (64)
        on left: 36
        on right: 9
    CMD_WHILE (65)
        on left: 37
        on right: 10
    PRIM_E (66)
        on left: 38 39 40 41
        on right: 36
    CMD_LET (67)
        on left: 42
        on right: 5 38
    LET_VARs (68)
        on left: 43 44
        on right: 42 43
    LET_VAR (69)
        on left: 45 46 47 48
        on right: 43 44
    CMD_VAR (70)
        on left: 49
        on right: 6 39
    VAR_VARs (71)
        on left: 50 51
        on right: 49 50
    VAR_VAR (72)
        on left: 52 53 54 55
        on right: 50 51
    CMD_CONST (73)
        on left: 56
        on right: 7 40
    CONST_VARs (74)
        on left: 57 58
        on right: 56 57
    CONST_VAR (75)
        on left: 59 60 61
        on right: 57 58
    CMD_IF (76)
        on left: 62 63
        on right: 8
    LVALUEPROP (77)
        on left: 64 65
        on right: 79 81 83 100
    KEYS_VALUE_PAIRS (78)
        on left: 66 67 68 69 70 71
        on right: 12 48 55 61 68 69 70 71 74 77
    ARRAY_ELEMENTS (79)
        on left: 72 73 74 75 76 77
        on right: 75 76 77 103
    E (80)
        on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
        on right: 11 13 15 20 21 25 27 35 36 37 41 46 53 59 62 63 64 65 66 69 72 75 78 79 82 83 84 85 86 87 88 89 90 91 92 93 94 101


State 0

    0 $accept: • S $end

    $default  reduce using rule 3 (CMDs)

    S     go to state 1
    CMDs  go to state 2


State 1

    0 $accept: S • $end

    $end  shift, and go to state 3


State 2

    1 S: CMDs •
    2 CMDs: CMDs • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 1 (S)

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 3

    0 $accept: S $end •

    $default  accept


State 4

   25 FUNCTION_SETA: ID • $@2 EMPILHA_TS SETA E
   78 E: ID • '=' E
   80  | ID • '=' '{' '}'
   82  | ID • MAIS_IGUAL E
   99  | ID •

    MAIS_IGUAL  shift, and go to state 34
    '='         shift, and go to state 35

    SETA      reduce using rule 24 ($@2)
    $default  reduce using rule 99 (E)

    $@2  go to state 36


State 5

   62 CMD_IF: IF • '(' E ')' CMD ELSE CMD
   63       | IF • '(' E ')' CMD

    '('  shift, and go to state 37


State 6

   42 CMD_LET: LET • LET_VARs

    ID  shift, and go to state 38

    LET_VARs  go to state 39
    LET_VAR   go to state 40


State 7

   56 CMD_CONST: CONST • CONST_VARs

    ID  shift, and go to state 41

    CONST_VARs  go to state 42
    CONST_VAR   go to state 43


State 8

   49 CMD_VAR: VAR • VAR_VARs

    ID  shift, and go to state 44

    VAR_VARs  go to state 45
    VAR_VAR   go to state 46


State 9

   36 CMD_FOR: FOR • '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 47


State 10

   23 FUNCTION_ANON: FUNCTION • $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   29 CMD_FUNCTION: FUNCTION • ID $@4 '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 48

    $default  reduce using rule 22 ($@1)

    $@1  go to state 49


State 11

   37 CMD_WHILE: WHILE • '(' E ')' CMD

    '('  shift, and go to state 50


State 12

   11 CMD: RETURN • E ';'
   12    | RETURN • '{' KEYS_VALUE_PAIRS '}' ';'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 52

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 53


State 13

   97 E: BOOLEAN •

    $default  reduce using rule 97 (E)


State 14

   95 E: CDOUBLE •

    $default  reduce using rule 95 (E)


State 15

   98 E: CSTRING •

    $default  reduce using rule 98 (E)


State 16

   96 E: CINT •

    $default  reduce using rule 96 (E)


State 17

   93 E: '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 54


State 18

  102 E: '[' • ']'
  103  | '[' • ARRAY_ELEMENTS ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 55
    ']'       shift, and go to state 56

    FUNCTION_ANON   go to state 23
    FUNCTION_SETA   go to state 24
    LVALUEPROP      go to state 32
    ARRAY_ELEMENTS  go to state 57
    E               go to state 58


State 19

   27 FUNCTION_SETA: '(' • LISTA_PARAMs $@3 FECHA_PARENTESES_FUNC E
  101 E: '(' • E ')'

    ID        shift, and go to state 59
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS     go to state 60
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LISTA_PARAMs   go to state 61
    PARAMs         go to state 62
    PARAM          go to state 63
    LVALUEPROP     go to state 32
    E              go to state 64


State 20

   16 CMD: ';' •

    $default  reduce using rule 16 (CMD)


State 21

   14 CMD: '{' • EMPILHA_TS CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 65


State 22

    2 CMDs: CMDs CMD •

    $default  reduce using rule 2 (CMDs)


State 23

  104 E: FUNCTION_ANON •

    $default  reduce using rule 104 (E)


State 24

  105 E: FUNCTION_SETA •

    $default  reduce using rule 105 (E)


State 25

    4 CMD: CMD_FUNCTION •

    $default  reduce using rule 4 (CMD)


State 26

    9 CMD: CMD_FOR •

    $default  reduce using rule 9 (CMD)


State 27

   10 CMD: CMD_WHILE •

    $default  reduce using rule 10 (CMD)


State 28

    5 CMD: CMD_LET • ';'

    ';'  shift, and go to state 66


State 29

    6 CMD: CMD_VAR • ';'

    ';'  shift, and go to state 67


State 30

    7 CMD: CMD_CONST • ';'

    ';'  shift, and go to state 68


State 31

    8 CMD: CMD_IF •

    $default  reduce using rule 8 (CMD)


State 32

   79 E: LVALUEPROP • '=' E
   81  | LVALUEPROP • '=' '{' '}'
   83  | LVALUEPROP • MAIS_IGUAL E
  100  | LVALUEPROP •

    MAIS_IGUAL  shift, and go to state 69
    '='         shift, and go to state 70

    $default  reduce using rule 100 (E)


State 33

   13 CMD: E • ';'
   15    | E • ASM ';'
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    ASM        shift, and go to state 71
    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ';'        shift, and go to state 84


State 34

   82 E: ID MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 85


State 35

   78 E: ID '=' • E
   80  | ID '=' • '{' '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 86

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 87


State 36

   25 FUNCTION_SETA: ID $@2 • EMPILHA_TS SETA E

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 88


State 37

   62 CMD_IF: IF '(' • E ')' CMD ELSE CMD
   63       | IF '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 89


State 38

   45 LET_VAR: ID •
   46        | ID • '=' E
   47        | ID • '=' '{' '}'
   48        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 90

    $default  reduce using rule 45 (LET_VAR)


State 39

   42 CMD_LET: LET LET_VARs •

    $default  reduce using rule 42 (CMD_LET)


State 40

   43 LET_VARs: LET_VAR • ',' LET_VARs
   44         | LET_VAR •

    ','  shift, and go to state 91

    $default  reduce using rule 44 (LET_VARs)


State 41

   59 CONST_VAR: ID • '=' E
   60          | ID • '=' '{' '}'
   61          | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 92


State 42

   56 CMD_CONST: CONST CONST_VARs •

    $default  reduce using rule 56 (CMD_CONST)


State 43

   57 CONST_VARs: CONST_VAR • ',' CONST_VARs
   58           | CONST_VAR •

    ','  shift, and go to state 93

    $default  reduce using rule 58 (CONST_VARs)


State 44

   52 VAR_VAR: ID •
   53        | ID • '=' E
   54        | ID • '=' '{' '}'
   55        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 94

    $default  reduce using rule 52 (VAR_VAR)


State 45

   49 CMD_VAR: VAR VAR_VARs •

    $default  reduce using rule 49 (CMD_VAR)


State 46

   50 VAR_VARs: VAR_VAR • ',' VAR_VARs
   51         | VAR_VAR •

    ','  shift, and go to state 95

    $default  reduce using rule 51 (VAR_VARs)


State 47

   36 CMD_FOR: FOR '(' • PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 4
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    PRIM_E         go to state 96
    CMD_LET        go to state 97
    CMD_VAR        go to state 98
    CMD_CONST      go to state 99
    LVALUEPROP     go to state 32
    E              go to state 100


State 48

   29 CMD_FUNCTION: FUNCTION ID • $@4 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 28 ($@4)

    $@4  go to state 101


State 49

   23 FUNCTION_ANON: FUNCTION $@1 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 102


State 50

   37 CMD_WHILE: WHILE '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 103


State 51

   23 FUNCTION_ANON: FUNCTION • $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 22 ($@1)

    $@1  go to state 49


State 52

   12 CMD: RETURN '{' • KEYS_VALUE_PAIRS '}' ';'

    ID  shift, and go to state 104

    KEYS_VALUE_PAIRS  go to state 105


State 53

   11 CMD: RETURN E • ';'
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ';'        shift, and go to state 106


State 54

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   93  | '-' E •
   94  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 93 (E)


State 55

   73 ARRAY_ELEMENTS: '{' • '}'
   74               | '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 104
    '}'  shift, and go to state 107

    KEYS_VALUE_PAIRS  go to state 108


State 56

  102 E: '[' ']' •

    $default  reduce using rule 102 (E)


State 57

   75 ARRAY_ELEMENTS: ARRAY_ELEMENTS • ',' E
   76               | ARRAY_ELEMENTS • ',' '{' '}'
   77               | ARRAY_ELEMENTS • ',' '{' KEYS_VALUE_PAIRS '}'
  103 E: '[' ARRAY_ELEMENTS • ']'

    ','  shift, and go to state 109
    ']'  shift, and go to state 110


State 58

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   72 ARRAY_ELEMENTS: E •
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 72 (ARRAY_ELEMENTS)


State 59

   25 FUNCTION_SETA: ID • $@2 EMPILHA_TS SETA E
   34 PARAM: ID •
   35      | ID • '=' E
   78 E: ID • '=' E
   80  | ID • '=' '{' '}'
   82  | ID • MAIS_IGUAL E
   99  | ID •

    MAIS_IGUAL  shift, and go to state 34
    '='         shift, and go to state 111

    FECHA_PARENTESES_FUNC  reduce using rule 34 (PARAM)
    SETA                   reduce using rule 24 ($@2)
    ','                    reduce using rule 34 (PARAM)
    $default               reduce using rule 99 (E)

    $@2  go to state 36


State 60

   31 LISTA_PARAMs: EMPILHA_TS •

    $default  reduce using rule 31 (LISTA_PARAMs)


State 61

   27 FUNCTION_SETA: '(' LISTA_PARAMs • $@3 FECHA_PARENTESES_FUNC E

    $default  reduce using rule 26 ($@3)

    $@3  go to state 112


State 62

   30 LISTA_PARAMs: PARAMs •
   32 PARAMs: PARAMs • ',' PARAM

    ','  shift, and go to state 113

    $default  reduce using rule 30 (LISTA_PARAMs)


State 63

   33 PARAMs: PARAM •

    $default  reduce using rule 33 (PARAMs)


State 64

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'
  101  | '(' E • ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ')'        shift, and go to state 114


State 65

   14 CMD: '{' EMPILHA_TS • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 115


State 66

    5 CMD: CMD_LET ';' •

    $default  reduce using rule 5 (CMD)


State 67

    6 CMD: CMD_VAR ';' •

    $default  reduce using rule 6 (CMD)


State 68

    7 CMD: CMD_CONST ';' •

    $default  reduce using rule 7 (CMD)


State 69

   83 E: LVALUEPROP MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 116


State 70

   79 E: LVALUEPROP '=' • E
   81  | LVALUEPROP '=' • '{' '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 117

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 118


State 71

   15 CMD: E ASM • ';'

    ';'  shift, and go to state 119


State 72

   91 E: E IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 120


State 73

   84 E: E '<' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 121


State 74

   85 E: E '>' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 122


State 75

   86 E: E '+' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 123


State 76

   87 E: E '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 124


State 77

   88 E: E '*' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 125


State 78

   89 E: E '/' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 126


State 79

   90 E: E '%' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 127


State 80

   92 E: E MAIS_MAIS •

    $default  reduce using rule 92 (E)


State 81

   64 LVALUEPROP: E '[' • E ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 128


State 82

   94 E: E '(' • LISTA_ARGs ')'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 19 (LISTA_ARGs)

    LISTA_ARGs     go to state 129
    ARGs           go to state 130
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 131


State 83

   65 LVALUEPROP: E '.' • ID

    ID  shift, and go to state 132


State 84

   13 CMD: E ';' •

    $default  reduce using rule 13 (CMD)


State 85

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   82 E: ID MAIS_IGUAL E •
   84  | E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 82 (E)


State 86

   80 E: ID '=' '{' • '}'

    '}'  shift, and go to state 133


State 87

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   78 E: ID '=' E •
   84  | E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 78 (E)


State 88

   25 FUNCTION_SETA: ID $@2 EMPILHA_TS • SETA E

    SETA  shift, and go to state 134


State 89

   62 CMD_IF: IF '(' E • ')' CMD ELSE CMD
   63       | IF '(' E • ')' CMD
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ')'        shift, and go to state 135


State 90

   46 LET_VAR: ID '=' • E
   47        | ID '=' • '{' '}'
   48        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 136

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 137


State 91

   43 LET_VARs: LET_VAR ',' • LET_VARs

    ID  shift, and go to state 38

    LET_VARs  go to state 138
    LET_VAR   go to state 40


State 92

   59 CONST_VAR: ID '=' • E
   60          | ID '=' • '{' '}'
   61          | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 139

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 140


State 93

   57 CONST_VARs: CONST_VAR ',' • CONST_VARs

    ID  shift, and go to state 41

    CONST_VARs  go to state 141
    CONST_VAR   go to state 43


State 94

   53 VAR_VAR: ID '=' • E
   54        | ID '=' • '{' '}'
   55        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 142

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 143


State 95

   50 VAR_VARs: VAR_VAR ',' • VAR_VARs

    ID  shift, and go to state 44

    VAR_VARs  go to state 144
    VAR_VAR   go to state 46


State 96

   36 CMD_FOR: FOR '(' PRIM_E • ';' E ';' E ')' CMD

    ';'  shift, and go to state 145


State 97

   38 PRIM_E: CMD_LET •

    $default  reduce using rule 38 (PRIM_E)


State 98

   39 PRIM_E: CMD_VAR •

    $default  reduce using rule 39 (PRIM_E)


State 99

   40 PRIM_E: CMD_CONST •

    $default  reduce using rule 40 (PRIM_E)


State 100

   41 PRIM_E: E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 41 (PRIM_E)


State 101

   29 CMD_FUNCTION: FUNCTION ID $@4 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 146


State 102

   23 FUNCTION_ANON: FUNCTION $@1 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 147

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 60
    LISTA_PARAMs  go to state 148
    PARAMs        go to state 62
    PARAM         go to state 63


State 103

   37 CMD_WHILE: WHILE '(' E • ')' CMD
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ')'        shift, and go to state 149


State 104

   66 KEYS_VALUE_PAIRS: ID • ':' E
   67                 | ID • ':' '{' '}'
   68                 | ID • ':' '{' KEYS_VALUE_PAIRS '}'
   69                 | ID • ':' E ',' KEYS_VALUE_PAIRS
   70                 | ID • ':' '{' '}' ',' KEYS_VALUE_PAIRS
   71                 | ID • ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ':'  shift, and go to state 150


State 105

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS • '}' ';'

    '}'  shift, and go to state 151


State 106

   11 CMD: RETURN E ';' •

    $default  reduce using rule 11 (CMD)


State 107

   73 ARRAY_ELEMENTS: '{' '}' •

    $default  reduce using rule 73 (ARRAY_ELEMENTS)


State 108

   74 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 152


State 109

   75 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' • E
   76               | ARRAY_ELEMENTS ',' • '{' '}'
   77               | ARRAY_ELEMENTS ',' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 153

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 154


State 110

  103 E: '[' ARRAY_ELEMENTS ']' •

    $default  reduce using rule 103 (E)


State 111

   35 PARAM: ID '=' • E
   78 E: ID '=' • E
   80  | ID '=' • '{' '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 86

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 155


State 112

   27 FUNCTION_SETA: '(' LISTA_PARAMs $@3 • FECHA_PARENTESES_FUNC E

    FECHA_PARENTESES_FUNC  shift, and go to state 156


State 113

   32 PARAMs: PARAMs ',' • PARAM

    ID  shift, and go to state 147

    PARAM  go to state 157


State 114

  101 E: '(' E ')' •

    $default  reduce using rule 101 (E)


State 115

    2 CMDs: CMDs • CMD
   14 CMD: '{' EMPILHA_TS CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 158

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 116

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   83 E: LVALUEPROP MAIS_IGUAL E •
   84  | E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 83 (E)


State 117

   81 E: LVALUEPROP '=' '{' • '}'

    '}'  shift, and go to state 159


State 118

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   79 E: LVALUEPROP '=' E •
   84  | E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 79 (E)


State 119

   15 CMD: E ASM ';' •

    $default  reduce using rule 15 (CMD)


State 120

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   91  | E IGUAL E •
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 91 (E)


State 121

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   84  | E '<' E •
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 84 (E)


State 122

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   85  | E '>' E •
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 85 (E)


State 123

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   86  | E '+' E •
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 86 (E)


State 124

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   87  | E '-' E •
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 87 (E)


State 125

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   88  | E '*' E •
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 88 (E)


State 126

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   89  | E '/' E •
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 89 (E)


State 127

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   90  | E '%' E •
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 90 (E)


State 128

   64 LVALUEPROP: E • '[' E ']'
   64           | E '[' E • ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ']'        shift, and go to state 160


State 129

   94 E: E '(' LISTA_ARGs • ')'

    ')'  shift, and go to state 161


State 130

   18 LISTA_ARGs: ARGs •
   20 ARGs: ARGs • ',' E

    ','  shift, and go to state 162

    $default  reduce using rule 18 (LISTA_ARGs)


State 131

   21 ARGs: E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 21 (ARGs)


State 132

   65 LVALUEPROP: E '.' ID •

    $default  reduce using rule 65 (LVALUEPROP)


State 133

   80 E: ID '=' '{' '}' •

    $default  reduce using rule 80 (E)


State 134

   25 FUNCTION_SETA: ID $@2 EMPILHA_TS SETA • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 163


State 135

   62 CMD_IF: IF '(' E ')' • CMD ELSE CMD
   63       | IF '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 164
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 136

   47 LET_VAR: ID '=' '{' • '}'
   48        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 104
    '}'  shift, and go to state 165

    KEYS_VALUE_PAIRS  go to state 166


State 137

   46 LET_VAR: ID '=' E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 46 (LET_VAR)


State 138

   43 LET_VARs: LET_VAR ',' LET_VARs •

    $default  reduce using rule 43 (LET_VARs)


State 139

   60 CONST_VAR: ID '=' '{' • '}'
   61          | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 104
    '}'  shift, and go to state 167

    KEYS_VALUE_PAIRS  go to state 168


State 140

   59 CONST_VAR: ID '=' E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 59 (CONST_VAR)


State 141

   57 CONST_VARs: CONST_VAR ',' CONST_VARs •

    $default  reduce using rule 57 (CONST_VARs)


State 142

   54 VAR_VAR: ID '=' '{' • '}'
   55        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 104
    '}'  shift, and go to state 169

    KEYS_VALUE_PAIRS  go to state 170


State 143

   53 VAR_VAR: ID '=' E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 53 (VAR_VAR)


State 144

   50 VAR_VARs: VAR_VAR ',' VAR_VARs •

    $default  reduce using rule 50 (VAR_VARs)


State 145

   36 CMD_FOR: FOR '(' PRIM_E ';' • E ';' E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 171


State 146

   29 CMD_FUNCTION: FUNCTION ID $@4 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 147

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 60
    LISTA_PARAMs  go to state 172
    PARAMs        go to state 62
    PARAM         go to state 63


State 147

   34 PARAM: ID •
   35      | ID • '=' E

    '='  shift, and go to state 173

    $default  reduce using rule 34 (PARAM)


State 148

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 174


State 149

   37 CMD_WHILE: WHILE '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 175
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 150

   66 KEYS_VALUE_PAIRS: ID ':' • E
   67                 | ID ':' • '{' '}'
   68                 | ID ':' • '{' KEYS_VALUE_PAIRS '}'
   69                 | ID ':' • E ',' KEYS_VALUE_PAIRS
   70                 | ID ':' • '{' '}' ',' KEYS_VALUE_PAIRS
   71                 | ID ':' • '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 176

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 177


State 151

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS '}' • ';'

    ';'  shift, and go to state 178


State 152

   74 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 74 (ARRAY_ELEMENTS)


State 153

   76 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' • '}'
   77               | ARRAY_ELEMENTS ',' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 104
    '}'  shift, and go to state 179

    KEYS_VALUE_PAIRS  go to state 180


State 154

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   75 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' E •
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 75 (ARRAY_ELEMENTS)


State 155

   35 PARAM: ID '=' E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   78 E: ID '=' E •
   84  | E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    ')'       reduce using rule 78 (E)
    $default  reduce using rule 35 (PARAM)


State 156

   27 FUNCTION_SETA: '(' LISTA_PARAMs $@3 FECHA_PARENTESES_FUNC • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 181


State 157

   32 PARAMs: PARAMs ',' PARAM •

    $default  reduce using rule 32 (PARAMs)


State 158

   14 CMD: '{' EMPILHA_TS CMDs '}' •

    $default  reduce using rule 14 (CMD)


State 159

   81 E: LVALUEPROP '=' '{' '}' •

    $default  reduce using rule 81 (E)


State 160

   64 LVALUEPROP: E '[' E ']' •

    $default  reduce using rule 64 (LVALUEPROP)


State 161

   94 E: E '(' LISTA_ARGs ')' •

    $default  reduce using rule 94 (E)


State 162

   20 ARGs: ARGs ',' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 182


State 163

   25 FUNCTION_SETA: ID $@2 EMPILHA_TS SETA E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 25 (FUNCTION_SETA)


State 164

   62 CMD_IF: IF '(' E ')' CMD • ELSE CMD
   63       | IF '(' E ')' CMD •

    ELSE  shift, and go to state 183

    ELSE      [reduce using rule 63 (CMD_IF)]
    $default  reduce using rule 63 (CMD_IF)


State 165

   47 LET_VAR: ID '=' '{' '}' •

    $default  reduce using rule 47 (LET_VAR)


State 166

   48 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 184


State 167

   60 CONST_VAR: ID '=' '{' '}' •

    $default  reduce using rule 60 (CONST_VAR)


State 168

   61 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 185


State 169

   54 VAR_VAR: ID '=' '{' '}' •

    $default  reduce using rule 54 (VAR_VAR)


State 170

   55 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 186


State 171

   36 CMD_FOR: FOR '(' PRIM_E ';' E • ';' E ')' CMD
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ';'        shift, and go to state 187


State 172

   29 CMD_FUNCTION: FUNCTION ID $@4 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 188


State 173

   35 PARAM: ID '=' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 189


State 174

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 190


State 175

   37 CMD_WHILE: WHILE '(' E ')' CMD •

    $default  reduce using rule 37 (CMD_WHILE)


State 176

   67 KEYS_VALUE_PAIRS: ID ':' '{' • '}'
   68                 | ID ':' '{' • KEYS_VALUE_PAIRS '}'
   70                 | ID ':' '{' • '}' ',' KEYS_VALUE_PAIRS
   71                 | ID ':' '{' • KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ID   shift, and go to state 104
    '}'  shift, and go to state 191

    KEYS_VALUE_PAIRS  go to state 192


State 177

   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   66 KEYS_VALUE_PAIRS: ID ':' E •
   69                 | ID ':' E • ',' KEYS_VALUE_PAIRS
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ','        shift, and go to state 193

    $default  reduce using rule 66 (KEYS_VALUE_PAIRS)


State 178

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS '}' ';' •

    $default  reduce using rule 12 (CMD)


State 179

   76 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' '}' •

    $default  reduce using rule 76 (ARRAY_ELEMENTS)


State 180

   77 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 194


State 181

   27 FUNCTION_SETA: '(' LISTA_PARAMs $@3 FECHA_PARENTESES_FUNC E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 27 (FUNCTION_SETA)


State 182

   20 ARGs: ARGs ',' E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 20 (ARGs)


State 183

   62 CMD_IF: IF '(' E ')' CMD ELSE • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 195
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 184

   48 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 48 (LET_VAR)


State 185

   61 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 61 (CONST_VAR)


State 186

   55 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 55 (VAR_VAR)


State 187

   36 CMD_FOR: FOR '(' PRIM_E ';' E ';' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 51
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 196


State 188

   29 CMD_FUNCTION: FUNCTION ID $@4 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 197


State 189

   35 PARAM: ID '=' E •
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83

    $default  reduce using rule 35 (PARAM)


State 190

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 198


State 191

   67 KEYS_VALUE_PAIRS: ID ':' '{' '}' •
   70                 | ID ':' '{' '}' • ',' KEYS_VALUE_PAIRS

    ','  shift, and go to state 199

    $default  reduce using rule 67 (KEYS_VALUE_PAIRS)


State 192

   68 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS • '}'
   71                 | ID ':' '{' KEYS_VALUE_PAIRS • '}' ',' KEYS_VALUE_PAIRS

    '}'  shift, and go to state 200


State 193

   69 KEYS_VALUE_PAIRS: ID ':' E ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 104

    KEYS_VALUE_PAIRS  go to state 201


State 194

   77 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 77 (ARRAY_ELEMENTS)


State 195

   62 CMD_IF: IF '(' E ')' CMD ELSE CMD •

    $default  reduce using rule 62 (CMD_IF)


State 196

   36 CMD_FOR: FOR '(' PRIM_E ';' E ';' E • ')' CMD
   64 LVALUEPROP: E • '[' E ']'
   65           | E • '.' ID
   84 E: E • '<' E
   85  | E • '>' E
   86  | E • '+' E
   87  | E • '-' E
   88  | E • '*' E
   89  | E • '/' E
   90  | E • '%' E
   91  | E • IGUAL E
   92  | E • MAIS_MAIS
   94  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 72
    '<'        shift, and go to state 73
    '>'        shift, and go to state 74
    '+'        shift, and go to state 75
    '-'        shift, and go to state 76
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    MAIS_MAIS  shift, and go to state 80
    '['        shift, and go to state 81
    '('        shift, and go to state 82
    '.'        shift, and go to state 83
    ')'        shift, and go to state 202


State 197

   29 CMD_FUNCTION: FUNCTION ID $@4 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 203


State 198

    2 CMDs: CMDs • CMD
   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 204

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 199

   70 KEYS_VALUE_PAIRS: ID ':' '{' '}' ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 104

    KEYS_VALUE_PAIRS  go to state 205


State 200

   68 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' •
   71                 | ID ':' '{' KEYS_VALUE_PAIRS '}' • ',' KEYS_VALUE_PAIRS

    ','  shift, and go to state 206

    $default  reduce using rule 68 (KEYS_VALUE_PAIRS)


State 201

   69 KEYS_VALUE_PAIRS: ID ':' E ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 69 (KEYS_VALUE_PAIRS)


State 202

   36 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 207
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 203

    2 CMDs: CMDs • CMD
   29 CMD_FUNCTION: FUNCTION ID $@4 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 208

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 204

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 23 (FUNCTION_ANON)


State 205

   70 KEYS_VALUE_PAIRS: ID ':' '{' '}' ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 70 (KEYS_VALUE_PAIRS)


State 206

   71 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 104

    KEYS_VALUE_PAIRS  go to state 209


State 207

   36 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD •

    $default  reduce using rule 36 (CMD_FOR)


State 208

   29 CMD_FUNCTION: FUNCTION ID $@4 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 29 (CMD_FUNCTION)


State 209

   71 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 71 (KEYS_VALUE_PAIRS)
