Terminals unused in grammar

    OBJECT
    AND
    OR
    ME_IG
    MA_IG
    DIF


State 141 conflicts: 2 reduce/reduce
State 171 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMDs CMD
    3     | ε

    4 CMD: CMD_FUNCTION
    5    | CMD_LET ';'
    6    | CMD_VAR ';'
    7    | CMD_CONST ';'
    8    | CMD_IF
    9    | CMD_FOR
   10    | CMD_WHILE
   11    | RETURN E ';'
   12    | RETURN '{' KEYS_VALUE_PAIRS '}' ';'
   13    | E ';'
   14    | '{' EMPILHA_TS CMDs '}'
   15    | E ASM ';'
   16    | ';'

   17 EMPILHA_TS: ε

   18 LISTA_ARGs: ARGs
   19           | ε

   20 ARGs: ARGs ',' E
   21     | E

   22 $@1: ε

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

   24 @2: ε

   25 FUNCTION_SETA: ID @2 SETA E

   26 @3: ε

   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC CMDs '}'

   28 $@4: ε

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC E

   30 $@5: ε

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' CMDs '}'

   32 LISTA_PARAMs: PARAMs
   33             | EMPILHA_TS

   34 PARAMs: PARAMs ',' PARAM
   35       | PARAM

   36 PARAM: ID
   37      | ID '=' E

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD

   39 CMD_WHILE: WHILE '(' E ')' CMD

   40 PRIM_E: CMD_LET
   41       | CMD_VAR
   42       | CMD_CONST
   43       | E

   44 CMD_LET: LET LET_VARs

   45 LET_VARs: LET_VAR ',' LET_VARs
   46         | LET_VAR

   47 LET_VAR: ID
   48        | ID '=' E
   49        | ID '=' '{' '}'
   50        | ID '=' '{' KEYS_VALUE_PAIRS '}'
   51        | ID '=' FUNCTION_SETA

   52 CMD_VAR: VAR VAR_VARs

   53 VAR_VARs: VAR_VAR ',' VAR_VARs
   54         | VAR_VAR

   55 VAR_VAR: ID
   56        | ID '=' E
   57        | ID '=' '{' '}'
   58        | ID '=' '{' KEYS_VALUE_PAIRS '}'

   59 CMD_CONST: CONST CONST_VARs

   60 CONST_VARs: CONST_VAR ',' CONST_VARs
   61           | CONST_VAR

   62 CONST_VAR: ID '=' E
   63          | ID '=' '{' '}'
   64          | ID '=' '{' KEYS_VALUE_PAIRS '}'

   65 CMD_IF: IF '(' E ')' CMD ELSE CMD
   66       | IF '(' E ')' CMD

   67 LVALUEPROP: E '[' E ']'
   68           | E '.' ID

   69 KEYS_VALUE_PAIRS: ID ':' E
   70                 | ID ':' '{' '}'
   71                 | ID ':' '{' KEYS_VALUE_PAIRS '}'
   72                 | ID ':' E ',' KEYS_VALUE_PAIRS
   73                 | ID ':' '{' '}' ',' KEYS_VALUE_PAIRS
   74                 | ID ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

   75 ARRAY_ELEMENTS: E
   76               | '{' '}'
   77               | '{' KEYS_VALUE_PAIRS '}'
   78               | ARRAY_ELEMENTS ',' E
   79               | ARRAY_ELEMENTS ',' '{' '}'
   80               | ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS '}'

   81 E: ID '=' E
   82  | ID '=' '{' '}'
   83  | ID '=' '{' KEYS_VALUE_PAIRS '}'
   84  | LVALUEPROP '=' E
   85  | LVALUEPROP '=' '{' '}'
   86  | LVALUEPROP '=' '{' KEYS_VALUE_PAIRS '}'
   87  | ID MAIS_IGUAL E
   88  | LVALUEPROP MAIS_IGUAL E
   89  | E '<' E
   90  | E '>' E
   91  | E '+' E
   92  | E '-' E
   93  | E '*' E
   94  | E '/' E
   95  | E '%' E
   96  | E IGUAL E
   97  | E MAIS_MAIS
   98  | '-' E
   99  | E '(' LISTA_ARGs ')'
  100  | CDOUBLE
  101  | CINT
  102  | BOOLEAN
  103  | CSTRING
  104  | ID
  105  | LVALUEPROP
  106  | '(' E ')'
  107  | '[' ']'
  108  | '[' ARRAY_ELEMENTS ']'
  109  | FUNCTION_ANON
  110  | FUNCTION_SETA


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 95
    '(' (40) 23 29 31 38 39 65 66 99 106
    ')' (41) 23 31 38 39 65 66 99 106
    '*' (42) 93
    '+' (43) 91
    ',' (44) 20 34 45 53 60 72 73 74 78 79 80
    '-' (45) 92 98
    '.' (46) 68
    '/' (47) 94
    ':' (58) 69 70 71 72 73 74
    ';' (59) 5 6 7 11 12 13 15 16 38
    '<' (60) 89
    '=' (61) 37 48 49 50 51 56 57 58 62 63 64 81 82 83 84 85 86
    '>' (62) 90
    '[' (91) 67 107 108
    ']' (93) 67 107 108
    '{' (123) 12 14 23 31 49 50 57 58 63 64 70 71 73 74 76 77 79 80 82 83 85 86
    '}' (125) 12 14 23 27 31 49 50 57 58 63 64 70 71 73 74 76 77 79 80 82 83 85 86
    error (256)
    ID (258) 25 27 31 36 37 47 48 49 50 51 55 56 57 58 62 63 64 68 69 70 71 72 73 74 81 82 83 87 104
    IF (259) 65 66
    ELSE (260) 65
    LET (261) 44
    CONST (262) 59
    VAR (263) 52
    FOR (264) 38
    FUNCTION (265) 23 31
    WHILE (266) 39
    ASM (267) 15
    RETURN (268) 11 12
    BOOLEAN (269) 102
    OBJECT (270)
    FECHA_PARENTESES_FUNC (271) 29
    SETA (272) 25
    OPEN_BRACKETS_FUNC (273) 27
    CDOUBLE (274) 100
    CSTRING (275) 103
    CINT (276) 101
    AND (277)
    OR (278)
    ME_IG (279)
    MA_IG (280)
    DIF (281)
    IGUAL (282) 96
    MAIS_IGUAL (283) 87 88
    MAIS_MAIS (284) 97


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    S (49)
        on left: 1
        on right: 0
    CMDs (50)
        on left: 2 3
        on right: 1 2 14 23 27 31
    CMD (51)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 38 39 65 66
    EMPILHA_TS (52)
        on left: 17
        on right: 14 33
    LISTA_ARGs (53)
        on left: 18 19
        on right: 99
    ARGs (54)
        on left: 20 21
        on right: 18 20
    FUNCTION_ANON (55)
        on left: 23
        on right: 109
    $@1 (56)
        on left: 22
        on right: 23
    FUNCTION_SETA (57)
        on left: 25 27 29
        on right: 51 110
    @2 (58)
        on left: 24
        on right: 25
    @3 (59)
        on left: 26
        on right: 27
    $@4 (60)
        on left: 28
        on right: 29
    CMD_FUNCTION (61)
        on left: 31
        on right: 4
    $@5 (62)
        on left: 30
        on right: 31
    LISTA_PARAMs (63)
        on left: 32 33
        on right: 23 29 31
    PARAMs (64)
        on left: 34 35
        on right: 32 34
    PARAM (65)
        on left: 36 37
        on right: 34 35
    CMD_FOR (66)
        on left: 38
        on right: 9
    CMD_WHILE (67)
        on left: 39
        on right: 10
    PRIM_E (68)
        on left: 40 41 42 43
        on right: 38
    CMD_LET (69)
        on left: 44
        on right: 5 40
    LET_VARs (70)
        on left: 45 46
        on right: 44 45
    LET_VAR (71)
        on left: 47 48 49 50 51
        on right: 45 46
    CMD_VAR (72)
        on left: 52
        on right: 6 41
    VAR_VARs (73)
        on left: 53 54
        on right: 52 53
    VAR_VAR (74)
        on left: 55 56 57 58
        on right: 53 54
    CMD_CONST (75)
        on left: 59
        on right: 7 42
    CONST_VARs (76)
        on left: 60 61
        on right: 59 60
    CONST_VAR (77)
        on left: 62 63 64
        on right: 60 61
    CMD_IF (78)
        on left: 65 66
        on right: 8
    LVALUEPROP (79)
        on left: 67 68
        on right: 84 85 86 88 105
    KEYS_VALUE_PAIRS (80)
        on left: 69 70 71 72 73 74
        on right: 12 50 58 64 71 72 73 74 77 80 83 86
    ARRAY_ELEMENTS (81)
        on left: 75 76 77 78 79 80
        on right: 78 79 80 108
    E (82)
        on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
        on right: 11 13 15 20 21 25 29 37 38 39 43 48 56 62 65 66 67 68 69 72 75 78 81 84 87 88 89 90 91 92 93 94 95 96 97 98 99 106


State 0

    0 $accept: • S $end

    $default  reduce using rule 3 (CMDs)

    S     go to state 1
    CMDs  go to state 2


State 1

    0 $accept: S • $end

    $end  shift, and go to state 3


State 2

    1 S: CMDs •
    2 CMDs: CMDs • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    $default  reduce using rule 1 (S)

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 3

    0 $accept: S $end •

    $default  accept


State 4

   25 FUNCTION_SETA: ID • @2 SETA E
   27              | ID • @3 OPEN_BRACKETS_FUNC CMDs '}'
   81 E: ID • '=' E
   82  | ID • '=' '{' '}'
   83  | ID • '=' '{' KEYS_VALUE_PAIRS '}'
   87  | ID • MAIS_IGUAL E
  104  | ID •

    MAIS_IGUAL  shift, and go to state 34
    '='         shift, and go to state 35

    SETA                reduce using rule 24 (@2)
    OPEN_BRACKETS_FUNC  reduce using rule 26 (@3)
    $default            reduce using rule 104 (E)

    @2  go to state 36
    @3  go to state 37


State 5

   65 CMD_IF: IF • '(' E ')' CMD ELSE CMD
   66       | IF • '(' E ')' CMD

    '('  shift, and go to state 38


State 6

   44 CMD_LET: LET • LET_VARs

    ID  shift, and go to state 39

    LET_VARs  go to state 40
    LET_VAR   go to state 41


State 7

   59 CMD_CONST: CONST • CONST_VARs

    ID  shift, and go to state 42

    CONST_VARs  go to state 43
    CONST_VAR   go to state 44


State 8

   52 CMD_VAR: VAR • VAR_VARs

    ID  shift, and go to state 45

    VAR_VARs  go to state 46
    VAR_VAR   go to state 47


State 9

   38 CMD_FOR: FOR • '(' PRIM_E ';' E ';' E ')' CMD

    '('  shift, and go to state 48


State 10

   23 FUNCTION_ANON: FUNCTION • $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'
   31 CMD_FUNCTION: FUNCTION • ID $@5 '(' LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 49

    $default  reduce using rule 22 ($@1)

    $@1  go to state 50


State 11

   39 CMD_WHILE: WHILE • '(' E ')' CMD

    '('  shift, and go to state 51


State 12

   11 CMD: RETURN • E ';'
   12    | RETURN • '{' KEYS_VALUE_PAIRS '}' ';'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 53

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 54


State 13

  102 E: BOOLEAN •

    $default  reduce using rule 102 (E)


State 14

  100 E: CDOUBLE •

    $default  reduce using rule 100 (E)


State 15

  103 E: CSTRING •

    $default  reduce using rule 103 (E)


State 16

  101 E: CINT •

    $default  reduce using rule 101 (E)


State 17

   98 E: '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 55


State 18

  107 E: '[' • ']'
  108  | '[' • ARRAY_ELEMENTS ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 56
    ']'       shift, and go to state 57

    FUNCTION_ANON   go to state 23
    FUNCTION_SETA   go to state 24
    LVALUEPROP      go to state 32
    ARRAY_ELEMENTS  go to state 58
    E               go to state 59


State 19

   29 FUNCTION_SETA: '(' • LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC E
  106 E: '(' • E ')'

    ID        shift, and go to state 60
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS     go to state 61
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LISTA_PARAMs   go to state 62
    PARAMs         go to state 63
    PARAM          go to state 64
    LVALUEPROP     go to state 32
    E              go to state 65


State 20

   16 CMD: ';' •

    $default  reduce using rule 16 (CMD)


State 21

   14 CMD: '{' • EMPILHA_TS CMDs '}'

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS  go to state 66


State 22

    2 CMDs: CMDs CMD •

    $default  reduce using rule 2 (CMDs)


State 23

  109 E: FUNCTION_ANON •

    $default  reduce using rule 109 (E)


State 24

  110 E: FUNCTION_SETA •

    $default  reduce using rule 110 (E)


State 25

    4 CMD: CMD_FUNCTION •

    $default  reduce using rule 4 (CMD)


State 26

    9 CMD: CMD_FOR •

    $default  reduce using rule 9 (CMD)


State 27

   10 CMD: CMD_WHILE •

    $default  reduce using rule 10 (CMD)


State 28

    5 CMD: CMD_LET • ';'

    ';'  shift, and go to state 67


State 29

    6 CMD: CMD_VAR • ';'

    ';'  shift, and go to state 68


State 30

    7 CMD: CMD_CONST • ';'

    ';'  shift, and go to state 69


State 31

    8 CMD: CMD_IF •

    $default  reduce using rule 8 (CMD)


State 32

   84 E: LVALUEPROP • '=' E
   85  | LVALUEPROP • '=' '{' '}'
   86  | LVALUEPROP • '=' '{' KEYS_VALUE_PAIRS '}'
   88  | LVALUEPROP • MAIS_IGUAL E
  105  | LVALUEPROP •

    MAIS_IGUAL  shift, and go to state 70
    '='         shift, and go to state 71

    $default  reduce using rule 105 (E)


State 33

   13 CMD: E • ';'
   15    | E • ASM ';'
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    ASM        shift, and go to state 72
    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ';'        shift, and go to state 85


State 34

   87 E: ID MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 86


State 35

   81 E: ID '=' • E
   82  | ID '=' • '{' '}'
   83  | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 87

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 88


State 36

   25 FUNCTION_SETA: ID @2 • SETA E

    SETA  shift, and go to state 89


State 37

   27 FUNCTION_SETA: ID @3 • OPEN_BRACKETS_FUNC CMDs '}'

    OPEN_BRACKETS_FUNC  shift, and go to state 90


State 38

   65 CMD_IF: IF '(' • E ')' CMD ELSE CMD
   66       | IF '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 91


State 39

   47 LET_VAR: ID •
   48        | ID • '=' E
   49        | ID • '=' '{' '}'
   50        | ID • '=' '{' KEYS_VALUE_PAIRS '}'
   51        | ID • '=' FUNCTION_SETA

    '='  shift, and go to state 92

    $default  reduce using rule 47 (LET_VAR)


State 40

   44 CMD_LET: LET LET_VARs •

    $default  reduce using rule 44 (CMD_LET)


State 41

   45 LET_VARs: LET_VAR • ',' LET_VARs
   46         | LET_VAR •

    ','  shift, and go to state 93

    $default  reduce using rule 46 (LET_VARs)


State 42

   62 CONST_VAR: ID • '=' E
   63          | ID • '=' '{' '}'
   64          | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 94


State 43

   59 CMD_CONST: CONST CONST_VARs •

    $default  reduce using rule 59 (CMD_CONST)


State 44

   60 CONST_VARs: CONST_VAR • ',' CONST_VARs
   61           | CONST_VAR •

    ','  shift, and go to state 95

    $default  reduce using rule 61 (CONST_VARs)


State 45

   55 VAR_VAR: ID •
   56        | ID • '=' E
   57        | ID • '=' '{' '}'
   58        | ID • '=' '{' KEYS_VALUE_PAIRS '}'

    '='  shift, and go to state 96

    $default  reduce using rule 55 (VAR_VAR)


State 46

   52 CMD_VAR: VAR VAR_VARs •

    $default  reduce using rule 52 (CMD_VAR)


State 47

   53 VAR_VARs: VAR_VAR • ',' VAR_VARs
   54         | VAR_VAR •

    ','  shift, and go to state 97

    $default  reduce using rule 54 (VAR_VARs)


State 48

   38 CMD_FOR: FOR '(' • PRIM_E ';' E ';' E ')' CMD

    ID        shift, and go to state 4
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    PRIM_E         go to state 98
    CMD_LET        go to state 99
    CMD_VAR        go to state 100
    CMD_CONST      go to state 101
    LVALUEPROP     go to state 32
    E              go to state 102


State 49

   31 CMD_FUNCTION: FUNCTION ID • $@5 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 30 ($@5)

    $@5  go to state 103


State 50

   23 FUNCTION_ANON: FUNCTION $@1 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 104


State 51

   39 CMD_WHILE: WHILE '(' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 105


State 52

   23 FUNCTION_ANON: FUNCTION • $@1 '(' LISTA_PARAMs ')' '{' CMDs '}'

    $default  reduce using rule 22 ($@1)

    $@1  go to state 50


State 53

   12 CMD: RETURN '{' • KEYS_VALUE_PAIRS '}' ';'

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 107


State 54

   11 CMD: RETURN E • ';'
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ';'        shift, and go to state 108


State 55

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   98  | '-' E •
   99  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 98 (E)


State 56

   76 ARRAY_ELEMENTS: '{' • '}'
   77               | '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 109

    KEYS_VALUE_PAIRS  go to state 110


State 57

  107 E: '[' ']' •

    $default  reduce using rule 107 (E)


State 58

   78 ARRAY_ELEMENTS: ARRAY_ELEMENTS • ',' E
   79               | ARRAY_ELEMENTS • ',' '{' '}'
   80               | ARRAY_ELEMENTS • ',' '{' KEYS_VALUE_PAIRS '}'
  108 E: '[' ARRAY_ELEMENTS • ']'

    ','  shift, and go to state 111
    ']'  shift, and go to state 112


State 59

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   75 ARRAY_ELEMENTS: E •
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 75 (ARRAY_ELEMENTS)


State 60

   25 FUNCTION_SETA: ID • @2 SETA E
   27              | ID • @3 OPEN_BRACKETS_FUNC CMDs '}'
   36 PARAM: ID •
   37      | ID • '=' E
   81 E: ID • '=' E
   82  | ID • '=' '{' '}'
   83  | ID • '=' '{' KEYS_VALUE_PAIRS '}'
   87  | ID • MAIS_IGUAL E
  104  | ID •

    MAIS_IGUAL  shift, and go to state 34
    '='         shift, and go to state 113

    FECHA_PARENTESES_FUNC  reduce using rule 36 (PARAM)
    SETA                   reduce using rule 24 (@2)
    OPEN_BRACKETS_FUNC     reduce using rule 26 (@3)
    ','                    reduce using rule 36 (PARAM)
    $default               reduce using rule 104 (E)

    @2  go to state 36
    @3  go to state 37


State 61

   33 LISTA_PARAMs: EMPILHA_TS •

    $default  reduce using rule 33 (LISTA_PARAMs)


State 62

   29 FUNCTION_SETA: '(' LISTA_PARAMs • $@4 FECHA_PARENTESES_FUNC E

    $default  reduce using rule 28 ($@4)

    $@4  go to state 114


State 63

   32 LISTA_PARAMs: PARAMs •
   34 PARAMs: PARAMs • ',' PARAM

    ','  shift, and go to state 115

    $default  reduce using rule 32 (LISTA_PARAMs)


State 64

   35 PARAMs: PARAM •

    $default  reduce using rule 35 (PARAMs)


State 65

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'
  106  | '(' E • ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 116


State 66

   14 CMD: '{' EMPILHA_TS • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 117


State 67

    5 CMD: CMD_LET ';' •

    $default  reduce using rule 5 (CMD)


State 68

    6 CMD: CMD_VAR ';' •

    $default  reduce using rule 6 (CMD)


State 69

    7 CMD: CMD_CONST ';' •

    $default  reduce using rule 7 (CMD)


State 70

   88 E: LVALUEPROP MAIS_IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 118


State 71

   84 E: LVALUEPROP '=' • E
   85  | LVALUEPROP '=' • '{' '}'
   86  | LVALUEPROP '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 119

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 120


State 72

   15 CMD: E ASM • ';'

    ';'  shift, and go to state 121


State 73

   96 E: E IGUAL • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 122


State 74

   89 E: E '<' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 123


State 75

   90 E: E '>' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 124


State 76

   91 E: E '+' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 125


State 77

   92 E: E '-' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 126


State 78

   93 E: E '*' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 127


State 79

   94 E: E '/' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 128


State 80

   95 E: E '%' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 129


State 81

   97 E: E MAIS_MAIS •

    $default  reduce using rule 97 (E)


State 82

   67 LVALUEPROP: E '[' • E ']'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 130


State 83

   99 E: E '(' • LISTA_ARGs ')'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    $default  reduce using rule 19 (LISTA_ARGs)

    LISTA_ARGs     go to state 131
    ARGs           go to state 132
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 133


State 84

   68 LVALUEPROP: E '.' • ID

    ID  shift, and go to state 134


State 85

   13 CMD: E ';' •

    $default  reduce using rule 13 (CMD)


State 86

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   87 E: ID MAIS_IGUAL E •
   89  | E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 87 (E)


State 87

   82 E: ID '=' '{' • '}'
   83  | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 135

    KEYS_VALUE_PAIRS  go to state 136


State 88

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   81 E: ID '=' E •
   89  | E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 81 (E)


State 89

   25 FUNCTION_SETA: ID @2 SETA • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 137


State 90

   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 138


State 91

   65 CMD_IF: IF '(' E • ')' CMD ELSE CMD
   66       | IF '(' E • ')' CMD
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 139


State 92

   48 LET_VAR: ID '=' • E
   49        | ID '=' • '{' '}'
   50        | ID '=' • '{' KEYS_VALUE_PAIRS '}'
   51        | ID '=' • FUNCTION_SETA

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 140

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 141
    LVALUEPROP     go to state 32
    E              go to state 142


State 93

   45 LET_VARs: LET_VAR ',' • LET_VARs

    ID  shift, and go to state 39

    LET_VARs  go to state 143
    LET_VAR   go to state 41


State 94

   62 CONST_VAR: ID '=' • E
   63          | ID '=' • '{' '}'
   64          | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 144

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 145


State 95

   60 CONST_VARs: CONST_VAR ',' • CONST_VARs

    ID  shift, and go to state 42

    CONST_VARs  go to state 146
    CONST_VAR   go to state 44


State 96

   56 VAR_VAR: ID '=' • E
   57        | ID '=' • '{' '}'
   58        | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 147

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 148


State 97

   53 VAR_VARs: VAR_VAR ',' • VAR_VARs

    ID  shift, and go to state 45

    VAR_VARs  go to state 149
    VAR_VAR   go to state 47


State 98

   38 CMD_FOR: FOR '(' PRIM_E • ';' E ';' E ')' CMD

    ';'  shift, and go to state 150


State 99

   40 PRIM_E: CMD_LET •

    $default  reduce using rule 40 (PRIM_E)


State 100

   41 PRIM_E: CMD_VAR •

    $default  reduce using rule 41 (PRIM_E)


State 101

   42 PRIM_E: CMD_CONST •

    $default  reduce using rule 42 (PRIM_E)


State 102

   43 PRIM_E: E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 43 (PRIM_E)


State 103

   31 CMD_FUNCTION: FUNCTION ID $@5 • '(' LISTA_PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 151


State 104

   23 FUNCTION_ANON: FUNCTION $@1 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 152

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 61
    LISTA_PARAMs  go to state 153
    PARAMs        go to state 63
    PARAM         go to state 64


State 105

   39 CMD_WHILE: WHILE '(' E • ')' CMD
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 154


State 106

   69 KEYS_VALUE_PAIRS: ID • ':' E
   70                 | ID • ':' '{' '}'
   71                 | ID • ':' '{' KEYS_VALUE_PAIRS '}'
   72                 | ID • ':' E ',' KEYS_VALUE_PAIRS
   73                 | ID • ':' '{' '}' ',' KEYS_VALUE_PAIRS
   74                 | ID • ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ':'  shift, and go to state 155


State 107

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS • '}' ';'

    '}'  shift, and go to state 156


State 108

   11 CMD: RETURN E ';' •

    $default  reduce using rule 11 (CMD)


State 109

   76 ARRAY_ELEMENTS: '{' '}' •

    $default  reduce using rule 76 (ARRAY_ELEMENTS)


State 110

   77 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 157


State 111

   78 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' • E
   79               | ARRAY_ELEMENTS ',' • '{' '}'
   80               | ARRAY_ELEMENTS ',' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 158

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 159


State 112

  108 E: '[' ARRAY_ELEMENTS ']' •

    $default  reduce using rule 108 (E)


State 113

   37 PARAM: ID '=' • E
   81 E: ID '=' • E
   82  | ID '=' • '{' '}'
   83  | ID '=' • '{' KEYS_VALUE_PAIRS '}'

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 87

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 160


State 114

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 • FECHA_PARENTESES_FUNC E

    FECHA_PARENTESES_FUNC  shift, and go to state 161


State 115

   34 PARAMs: PARAMs ',' • PARAM

    ID  shift, and go to state 152

    PARAM  go to state 162


State 116

  106 E: '(' E ')' •

    $default  reduce using rule 106 (E)


State 117

    2 CMDs: CMDs • CMD
   14 CMD: '{' EMPILHA_TS CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 163

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 118

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   88 E: LVALUEPROP MAIS_IGUAL E •
   89  | E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 88 (E)


State 119

   85 E: LVALUEPROP '=' '{' • '}'
   86  | LVALUEPROP '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 164

    KEYS_VALUE_PAIRS  go to state 165


State 120

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   84 E: LVALUEPROP '=' E •
   89  | E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 84 (E)


State 121

   15 CMD: E ASM ';' •

    $default  reduce using rule 15 (CMD)


State 122

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   96  | E IGUAL E •
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 96 (E)


State 123

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   89  | E '<' E •
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 89 (E)


State 124

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   90  | E '>' E •
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    IGUAL  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 90 (E)


State 125

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   91  | E '+' E •
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 91 (E)


State 126

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   92  | E '-' E •
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 92 (E)


State 127

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   93  | E '*' E •
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 93 (E)


State 128

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   94  | E '/' E •
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 94 (E)


State 129

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   95  | E '%' E •
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 95 (E)


State 130

   67 LVALUEPROP: E • '[' E ']'
   67           | E '[' E • ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ']'        shift, and go to state 166


State 131

   99 E: E '(' LISTA_ARGs • ')'

    ')'  shift, and go to state 167


State 132

   18 LISTA_ARGs: ARGs •
   20 ARGs: ARGs • ',' E

    ','  shift, and go to state 168

    $default  reduce using rule 18 (LISTA_ARGs)


State 133

   21 ARGs: E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 21 (ARGs)


State 134

   68 LVALUEPROP: E '.' ID •

    $default  reduce using rule 68 (LVALUEPROP)


State 135

   82 E: ID '=' '{' '}' •

    $default  reduce using rule 82 (E)


State 136

   83 E: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 169


State 137

   25 FUNCTION_SETA: ID @2 SETA E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 25 (FUNCTION_SETA)


State 138

    2 CMDs: CMDs • CMD
   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 170

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 139

   65 CMD_IF: IF '(' E ')' • CMD ELSE CMD
   66       | IF '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 171
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 140

   49 LET_VAR: ID '=' '{' • '}'
   50        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 172

    KEYS_VALUE_PAIRS  go to state 173


State 141

   51 LET_VAR: ID '=' FUNCTION_SETA •
  110 E: FUNCTION_SETA •

    ';'       reduce using rule 51 (LET_VAR)
    ';'       [reduce using rule 110 (E)]
    ','       reduce using rule 51 (LET_VAR)
    ','       [reduce using rule 110 (E)]
    $default  reduce using rule 110 (E)


State 142

   48 LET_VAR: ID '=' E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 48 (LET_VAR)


State 143

   45 LET_VARs: LET_VAR ',' LET_VARs •

    $default  reduce using rule 45 (LET_VARs)


State 144

   63 CONST_VAR: ID '=' '{' • '}'
   64          | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 174

    KEYS_VALUE_PAIRS  go to state 175


State 145

   62 CONST_VAR: ID '=' E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 62 (CONST_VAR)


State 146

   60 CONST_VARs: CONST_VAR ',' CONST_VARs •

    $default  reduce using rule 60 (CONST_VARs)


State 147

   57 VAR_VAR: ID '=' '{' • '}'
   58        | ID '=' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 176

    KEYS_VALUE_PAIRS  go to state 177


State 148

   56 VAR_VAR: ID '=' E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 56 (VAR_VAR)


State 149

   53 VAR_VARs: VAR_VAR ',' VAR_VARs •

    $default  reduce using rule 53 (VAR_VARs)


State 150

   38 CMD_FOR: FOR '(' PRIM_E ';' • E ';' E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 178


State 151

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' • LISTA_PARAMs ')' '{' CMDs '}'

    ID  shift, and go to state 152

    $default  reduce using rule 17 (EMPILHA_TS)

    EMPILHA_TS    go to state 61
    LISTA_PARAMs  go to state 179
    PARAMs        go to state 63
    PARAM         go to state 64


State 152

   36 PARAM: ID •
   37      | ID • '=' E

    '='  shift, and go to state 180

    $default  reduce using rule 36 (PARAM)


State 153

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 181


State 154

   39 CMD_WHILE: WHILE '(' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 182
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 155

   69 KEYS_VALUE_PAIRS: ID ':' • E
   70                 | ID ':' • '{' '}'
   71                 | ID ':' • '{' KEYS_VALUE_PAIRS '}'
   72                 | ID ':' • E ',' KEYS_VALUE_PAIRS
   73                 | ID ':' • '{' '}' ',' KEYS_VALUE_PAIRS
   74                 | ID ':' • '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    '{'       shift, and go to state 183

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 184


State 156

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS '}' • ';'

    ';'  shift, and go to state 185


State 157

   77 ARRAY_ELEMENTS: '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 77 (ARRAY_ELEMENTS)


State 158

   79 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' • '}'
   80               | ARRAY_ELEMENTS ',' '{' • KEYS_VALUE_PAIRS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 186

    KEYS_VALUE_PAIRS  go to state 187


State 159

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   78 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' E •
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 78 (ARRAY_ELEMENTS)


State 160

   37 PARAM: ID '=' E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   81 E: ID '=' E •
   89  | E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    ')'       reduce using rule 81 (E)
    $default  reduce using rule 37 (PARAM)


State 161

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 188


State 162

   34 PARAMs: PARAMs ',' PARAM •

    $default  reduce using rule 34 (PARAMs)


State 163

   14 CMD: '{' EMPILHA_TS CMDs '}' •

    $default  reduce using rule 14 (CMD)


State 164

   85 E: LVALUEPROP '=' '{' '}' •

    $default  reduce using rule 85 (E)


State 165

   86 E: LVALUEPROP '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 189


State 166

   67 LVALUEPROP: E '[' E ']' •

    $default  reduce using rule 67 (LVALUEPROP)


State 167

   99 E: E '(' LISTA_ARGs ')' •

    $default  reduce using rule 99 (E)


State 168

   20 ARGs: ARGs ',' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 190


State 169

   83 E: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 83 (E)


State 170

   27 FUNCTION_SETA: ID @3 OPEN_BRACKETS_FUNC CMDs '}' •

    $default  reduce using rule 27 (FUNCTION_SETA)


State 171

   65 CMD_IF: IF '(' E ')' CMD • ELSE CMD
   66       | IF '(' E ')' CMD •

    ELSE  shift, and go to state 191

    ELSE      [reduce using rule 66 (CMD_IF)]
    $default  reduce using rule 66 (CMD_IF)


State 172

   49 LET_VAR: ID '=' '{' '}' •

    $default  reduce using rule 49 (LET_VAR)


State 173

   50 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 192


State 174

   63 CONST_VAR: ID '=' '{' '}' •

    $default  reduce using rule 63 (CONST_VAR)


State 175

   64 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 193


State 176

   57 VAR_VAR: ID '=' '{' '}' •

    $default  reduce using rule 57 (VAR_VAR)


State 177

   58 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 194


State 178

   38 CMD_FOR: FOR '(' PRIM_E ';' E • ';' E ')' CMD
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ';'        shift, and go to state 195


State 179

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs • ')' '{' CMDs '}'

    ')'  shift, and go to state 196


State 180

   37 PARAM: ID '=' • E

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 197


State 181

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 198


State 182

   39 CMD_WHILE: WHILE '(' E ')' CMD •

    $default  reduce using rule 39 (CMD_WHILE)


State 183

   70 KEYS_VALUE_PAIRS: ID ':' '{' • '}'
   71                 | ID ':' '{' • KEYS_VALUE_PAIRS '}'
   73                 | ID ':' '{' • '}' ',' KEYS_VALUE_PAIRS
   74                 | ID ':' '{' • KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS

    ID   shift, and go to state 106
    '}'  shift, and go to state 199

    KEYS_VALUE_PAIRS  go to state 200


State 184

   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   69 KEYS_VALUE_PAIRS: ID ':' E •
   72                 | ID ':' E • ',' KEYS_VALUE_PAIRS
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ','        shift, and go to state 201

    $default  reduce using rule 69 (KEYS_VALUE_PAIRS)


State 185

   12 CMD: RETURN '{' KEYS_VALUE_PAIRS '}' ';' •

    $default  reduce using rule 12 (CMD)


State 186

   79 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' '}' •

    $default  reduce using rule 79 (ARRAY_ELEMENTS)


State 187

   80 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS • '}'

    '}'  shift, and go to state 202


State 188

   29 FUNCTION_SETA: '(' LISTA_PARAMs $@4 FECHA_PARENTESES_FUNC E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 29 (FUNCTION_SETA)


State 189

   86 E: LVALUEPROP '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 86 (E)


State 190

   20 ARGs: ARGs ',' E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 20 (ARGs)


State 191

   65 CMD_IF: IF '(' E ')' CMD ELSE • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 203
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 192

   50 LET_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 50 (LET_VAR)


State 193

   64 CONST_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 64 (CONST_VAR)


State 194

   58 VAR_VAR: ID '=' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 58 (VAR_VAR)


State 195

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' • E ')' CMD

    ID        shift, and go to state 4
    FUNCTION  shift, and go to state 52
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19

    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    LVALUEPROP     go to state 32
    E              go to state 204


State 196

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' • '{' CMDs '}'

    '{'  shift, and go to state 205


State 197

   37 PARAM: ID '=' E •
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84

    $default  reduce using rule 37 (PARAM)


State 198

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 206


State 199

   70 KEYS_VALUE_PAIRS: ID ':' '{' '}' •
   73                 | ID ':' '{' '}' • ',' KEYS_VALUE_PAIRS

    ','  shift, and go to state 207

    $default  reduce using rule 70 (KEYS_VALUE_PAIRS)


State 200

   71 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS • '}'
   74                 | ID ':' '{' KEYS_VALUE_PAIRS • '}' ',' KEYS_VALUE_PAIRS

    '}'  shift, and go to state 208


State 201

   72 KEYS_VALUE_PAIRS: ID ':' E ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 209


State 202

   80 ARRAY_ELEMENTS: ARRAY_ELEMENTS ',' '{' KEYS_VALUE_PAIRS '}' •

    $default  reduce using rule 80 (ARRAY_ELEMENTS)


State 203

   65 CMD_IF: IF '(' E ')' CMD ELSE CMD •

    $default  reduce using rule 65 (CMD_IF)


State 204

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E • ')' CMD
   67 LVALUEPROP: E • '[' E ']'
   68           | E • '.' ID
   89 E: E • '<' E
   90  | E • '>' E
   91  | E • '+' E
   92  | E • '-' E
   93  | E • '*' E
   94  | E • '/' E
   95  | E • '%' E
   96  | E • IGUAL E
   97  | E • MAIS_MAIS
   99  | E • '(' LISTA_ARGs ')'

    IGUAL      shift, and go to state 73
    '<'        shift, and go to state 74
    '>'        shift, and go to state 75
    '+'        shift, and go to state 76
    '-'        shift, and go to state 77
    '*'        shift, and go to state 78
    '/'        shift, and go to state 79
    '%'        shift, and go to state 80
    MAIS_MAIS  shift, and go to state 81
    '['        shift, and go to state 82
    '('        shift, and go to state 83
    '.'        shift, and go to state 84
    ')'        shift, and go to state 210


State 205

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' • CMDs '}'

    $default  reduce using rule 3 (CMDs)

    CMDs  go to state 211


State 206

    2 CMDs: CMDs • CMD
   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 212

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 207

   73 KEYS_VALUE_PAIRS: ID ':' '{' '}' ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 213


State 208

   71 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' •
   74                 | ID ':' '{' KEYS_VALUE_PAIRS '}' • ',' KEYS_VALUE_PAIRS

    ','  shift, and go to state 214

    $default  reduce using rule 71 (KEYS_VALUE_PAIRS)


State 209

   72 KEYS_VALUE_PAIRS: ID ':' E ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 72 (KEYS_VALUE_PAIRS)


State 210

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' • CMD

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21

    CMD            go to state 215
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 211

    2 CMDs: CMDs • CMD
   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' CMDs • '}'

    ID        shift, and go to state 4
    IF        shift, and go to state 5
    LET       shift, and go to state 6
    CONST     shift, and go to state 7
    VAR       shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    WHILE     shift, and go to state 11
    RETURN    shift, and go to state 12
    BOOLEAN   shift, and go to state 13
    CDOUBLE   shift, and go to state 14
    CSTRING   shift, and go to state 15
    CINT      shift, and go to state 16
    '-'       shift, and go to state 17
    '['       shift, and go to state 18
    '('       shift, and go to state 19
    ';'       shift, and go to state 20
    '{'       shift, and go to state 21
    '}'       shift, and go to state 216

    CMD            go to state 22
    FUNCTION_ANON  go to state 23
    FUNCTION_SETA  go to state 24
    CMD_FUNCTION   go to state 25
    CMD_FOR        go to state 26
    CMD_WHILE      go to state 27
    CMD_LET        go to state 28
    CMD_VAR        go to state 29
    CMD_CONST      go to state 30
    CMD_IF         go to state 31
    LVALUEPROP     go to state 32
    E              go to state 33


State 212

   23 FUNCTION_ANON: FUNCTION $@1 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 23 (FUNCTION_ANON)


State 213

   73 KEYS_VALUE_PAIRS: ID ':' '{' '}' ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 73 (KEYS_VALUE_PAIRS)


State 214

   74 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' ',' • KEYS_VALUE_PAIRS

    ID  shift, and go to state 106

    KEYS_VALUE_PAIRS  go to state 217


State 215

   38 CMD_FOR: FOR '(' PRIM_E ';' E ';' E ')' CMD •

    $default  reduce using rule 38 (CMD_FOR)


State 216

   31 CMD_FUNCTION: FUNCTION ID $@5 '(' LISTA_PARAMs ')' '{' CMDs '}' •

    $default  reduce using rule 31 (CMD_FUNCTION)


State 217

   74 KEYS_VALUE_PAIRS: ID ':' '{' KEYS_VALUE_PAIRS '}' ',' KEYS_VALUE_PAIRS •

    $default  reduce using rule 74 (KEYS_VALUE_PAIRS)
